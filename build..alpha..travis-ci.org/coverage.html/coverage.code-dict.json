{"/home/travis/build/npmtest/node-npmtest-react-d3/test.js":"/* istanbul instrument in package npmtest_react_d3 */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-d3/lib.npmtest_react_d3.js":"/* istanbul instrument in package npmtest_react_d3 */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_react_d3 = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_react_d3 = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-react-d3/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-react-d3 && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_react_d3 */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_react_d3\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_react_d3.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_react_d3.rollup.js'] =\n            local.assetsDict['/assets.npmtest_react_d3.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_react_d3.__dirname + '/lib.npmtest_react_d3.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/index.js":"exports.BarChart = require('./barchart').BarChart;\nexports.LineChart = require('./linechart').LineChart;\nexports.PieChart = require('./piechart').PieChart;\nexports.AreaChart = require('./areachart').AreaChart;\nexports.Treemap = require('./treemap').Treemap;\nexports.ScatterChart = require('./scatterchart').ScatterChart;\nexports.CandlestickChart = require('./candlestick').CandlestickChart;\n\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/barchart/index.js":"\nexports.BarChart = require('./BarChart');\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/barchart/BarChart.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\nvar DataSeries = require('./DataSeries');\nvar utils = require('../utils');\n\nvar $__0=      require('../common'),Chart=$__0.Chart,XAxis=$__0.XAxis,YAxis=$__0.YAxis;\nvar $__1=     require('../mixins'),CartesianChartPropsMixin=$__1.CartesianChartPropsMixin,ViewBoxMixin=$__1.ViewBoxMixin;\n\nmodule.exports = React.createClass({\n\n  mixins: [ CartesianChartPropsMixin, ViewBoxMixin ],\n\n  displayName: 'BarChart',\n\n  propTypes: {\n    chartClassName:         React.PropTypes.string,\n    data:                   React.PropTypes.array.isRequired,\n    hoverAnimation:         React.PropTypes.bool,\n    height:                 React.PropTypes.number,\n    margins:                React.PropTypes.object,\n    rangeRoundBandsPadding: React.PropTypes.number,\n    // https://github.com/mbostock/d3/wiki/Stack-Layout#offset\n    stackOffset:            React.PropTypes.oneOf(['silhouette', 'expand', 'wigget', 'zero']),\n    valuesAccessor:         React.PropTypes.func,\n    title:                  React.PropTypes.string,\n    width:                  React.PropTypes.number,\n    xAxisClassName:         React.PropTypes.string,\n    yAxisClassName:         React.PropTypes.string,\n    yAxisTickCount:         React.PropTypes.number,\n  },\n\n  getDefaultProps:function() {\n    return {\n      chartClassName:         'rd3-barchart',\n      hoverAnimation:         true,\n      margins:                {top: 10, right: 20, bottom: 40, left: 45},\n      rangeRoundBandsPadding: 0.25,\n      stackOffset:            'zero',\n      valuesAccessor:         function(d)  {return d.values;},\n      xAxisClassName:         'rd3-barchart-xaxis',\n      yAxisClassName:         'rd3-barchart-yaxis',\n      yAxisTickCount:         4,\n    };\n  },\n\n  _getStackedValuesMaxY:function(_data) {\n    // in stacked bar chart, the maximum height we need for \n    // yScale domain is the sum of y0 + y\n    var $__0=    this.props,valuesAccessor=$__0.valuesAccessor;\n    return d3.max(_data, function(d) {\n      return d3.max(valuesAccessor(d), function(d) {\n        // where y0, y is generated by d3.layout.stack()\n        return d.y0 + d.y;\n      });\n    });\n  },\n\n  _getLabels:function(firstSeries) {\n    // we only need first series to get all the labels\n    var $__0=     this.props,valuesAccessor=$__0.valuesAccessor,xAccessor=$__0.xAccessor;\n    return valuesAccessor(firstSeries).map(xAccessor);\n  },\n\n  _stack:function() {\n    var $__0=       this.props,stackOffset=$__0.stackOffset,xAccessor=$__0.xAccessor,yAccessor=$__0.yAccessor,valuesAccessor=$__0.valuesAccessor;\n    return d3.layout.stack()\n                    .offset(stackOffset)\n                    .x(xAccessor)\n                    .y(yAccessor)\n                    .values(valuesAccessor);\n  },\n\n  render:function() {\n\n    var props = this.props;\n\n    var _data = this._stack()(props.data);\n\n    var margins = props.margins;\n\n    var innerHeight = props.height - ( margins.top + margins.bottom );\n    var innerWidth = props.width - ( margins.left + margins.right );\n\n    var xScale = d3.scale.ordinal()\n      .domain(this._getLabels(_data[0]))\n      .rangeRoundBands([0, innerWidth], props.rangeRoundBandsPadding);\n\n    var yScale = d3.scale.linear()\n      .range([innerHeight, 0])\n      .domain([0, this._getStackedValuesMaxY(_data)]);\n\n    var trans = (\"translate(\" +  margins.left + \",\" +  margins.top + \")\");\n\n    return (\n      React.createElement(Chart, {\n        viewBox: props.viewBox, \n        legend: props.legend, \n        data: props.data, \n        margins: props.margins, \n        colors: props.colors, \n        colorAccessor: props.colorAccessor, \n        width: props.width, \n        height: props.height, \n        title: props.title\n      }, \n        React.createElement(\"g\", {transform: trans, className: props.chartClassName}, \n          React.createElement(YAxis, {\n            yAxisClassName: props.yAxisClassName, \n            yAxisTickValues: props.yAxisTickValues, \n            yAxisLabel: props.yAxisLabel, \n            yAxisLabelOffset: props.yAxisLabelOffset, \n            yScale: yScale, \n            margins: margins, \n            yAxisTickCount: props.yAxisTickCount, \n            tickFormatting: props.yAxisFormatter, \n            width: innerWidth, \n            height: innerHeight, \n            xOrient: props.xOrient, \n            yOrient: props.yOrient, \n            gridHorizontal: props.gridHorizontal, \n            gridHorizontalStroke: props.gridHorizontalStroke, \n            gridHorizontalStrokeWidth: props.gridHorizontalStrokeWidth, \n            gridHorizontalStrokeDash: props.gridHorizontalStrokeDash}\n          ), \n          React.createElement(XAxis, {\n            xAxisClassName: props.xAxisClassName, \n            xAxisTickValues: props.xAxisTickValues, \n            xAxisLabel: props.xAxisLabel, \n            xAxisLabelOffset: props.xAxisLabelOffset, \n            xScale: xScale, \n            margins: margins, \n            tickFormatting: props.xAxisFormatter, \n            width: innerWidth, \n            height: innerHeight, \n            xOrient: props.xOrient, \n            yOrient: props.yOrient, \n            gridVertical: props.gridVertical, \n            gridVerticalStroke: props.gridVerticalStroke, \n            gridVerticalStrokeWidth: props.gridVerticalStrokeWidth, \n            gridVerticalStrokeDash: props.gridVerticalStrokeDash}\n          ), \n          React.createElement(DataSeries, {\n            yScale: yScale, \n            xScale: xScale, \n            margins: margins, \n            _data: _data, \n            width: innerWidth, \n            height: innerHeight, \n            colors: props.colors, \n            colorAccessor: props.colorAccessor, \n            hoverAnimation: props.hoverAnimation, \n            valuesAccessor: props.valuesAccessor}\n            )\n        )\n      )\n    );\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/barchart/DataSeries.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\nvar BarContainer = require('./BarContainer');\n\nmodule.exports = React.createClass({\n\n  displayName: 'DataSeries',\n\n  propTypes: {\n    _data:          React.PropTypes.array,\n    colors:         React.PropTypes.func,\n    colorAccessor:  React.PropTypes.func,\n    height:         React.PropTypes.number,\n    width:          React.PropTypes.number,\n    valuesAccessor: React.PropTypes.func,\n  },\n\n  render:function() {\n    return (\n      React.createElement(\"g\", null, this._renderBarSeries())\n    );\n  },\n\n  _renderBarSeries:function() {\n    var $__0=     this.props,_data=$__0._data,valuesAccessor=$__0.valuesAccessor;\n    return _data.map(function(layer, seriesIdx)  {\n      return valuesAccessor(layer)\n             .map(function(segment)  {return this._renderBarContainer(segment, seriesIdx);}.bind(this))\n    }.bind(this));\n  },\n\n  _renderBarContainer:function(segment, seriesIdx) {\n    var $__0=         this.props,colors=$__0.colors,colorAccessor=$__0.colorAccessor,height=$__0.height,hoverAnimation=$__0.hoverAnimation,xScale=$__0.xScale,yScale=$__0.yScale;\n    return (\n      React.createElement(BarContainer, {\n        height: height - yScale(segment.y), \n        width: xScale.rangeBand(), \n        x: xScale(segment.x), \n        y: yScale( segment.y0 + segment.y), \n        fill: colors(colorAccessor(segment, seriesIdx)), \n        hoverAnimation: hoverAnimation}\n      )\n    )\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/barchart/BarContainer.js":"'use strict';\n\nvar React = require('react');\nvar Bar = require('./Bar');\nvar shade = require('../utils').shade;\n\nmodule.exports = React.createClass({displayName: \"exports\",\n\n  propTypes: {\n    fill: React.PropTypes.string,\n  },\n\n  getDefaultProps:function() {\n    return {\n      fill: '#3182BD'\n    };\n  },\n\n  getInitialState:function() {\n    return {\n      // fill is named as fill instead of initialFill to avoid\n      // confusion when passing down props from top parent\n      fill: this.props.fill\n    };\n  },\n\n  render:function() {\n\n    var props = this.props;\n\n    return (\n      React.createElement(Bar, React.__spread({}, \n        props, \n        {fill: this.state.fill, \n        handleMouseOver: props.hoverAnimation ? this._animateBar : null, \n        handleMouseLeave: props.hoverAnimation ? this._restoreBar : null})\n      )\n    );\n  },\n\n  _animateBar:function() {\n    this.setState({ \n      fill: shade(this.props.fill, 0.2)\n    });\n  },\n\n  _restoreBar:function() {\n    this.setState({ \n      fill: this.props.fill\n    });\n  },\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/barchart/Bar.js":"'use strict';\n\nvar React = require('react');\n\nmodule.exports = React.createClass({displayName: \"exports\",\n\n  propTypes: {\n    fill: React.PropTypes.string,\n    width: React.PropTypes.number,\n    height: React.PropTypes.number,\n    x: React.PropTypes.number,\n    y: React.PropTypes.number,\n    className: React.PropTypes.string\n  },\n\n  getDefaultProps:function() {\n    return {\n      offset: 0,\n      className: 'rd3-barchart-bar'\n    };\n  },\n\n  render:function() {\n    return (\n      React.createElement(\"rect\", React.__spread({\n        className: \"rd3-barchart-bar\"}, \n        this.props, \n        {fill: this.props.fill, \n        onMouseOver: this.props.handleMouseOver, \n        onMouseLeave: this.props.handleMouseLeave})\n      )\n    );\n  }\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/utils/index.js":"var d3 = require('d3');\n\n\nexports.calculateScales = function(chartWidth, chartHeight, xValues, yValues)  {\n\n  var xScale, yScale;\n\n  if (xValues.length > 0 && Object.prototype.toString.call(xValues[0]) === '[object Date]') {\n    xScale = d3.time.scale()\n      .range([0, chartWidth]);\n  } else {\n    xScale = d3.scale.linear()\n      .range([0, chartWidth]);\n  }\n  xScale.domain(d3.extent(xValues));\n\n  if (yValues.length > 0 && Object.prototype.toString.call(yValues[0]) === '[object Date]') {\n    yScale = d3.time.scale()\n      .range([chartHeight, 0]);\n  } else {\n    yScale = d3.scale.linear()\n      .range([chartHeight, 0]);\n  }\n\n  yScale.domain(d3.extent(yValues));\n\n  return {\n    xScale: xScale,\n    yScale: yScale\n  };\n\n};\n\n// debounce from Underscore.js\n// MIT License: https://raw.githubusercontent.com/jashkenas/underscore/master/LICENSE\n// Copyright (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative\n// Reporters & Editors\nexports.debounce = function(func, wait, immediate) {\n  var timeout;\n  return function() {\n    var context = this, args = arguments;\n    var later = function() {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\nexports.flattenData = function(data, xAccessor, yAccessor)  {\n\n  var allValues = [];\n  var xValues = [];\n  var yValues = [];\n  var coincidentCoordinateCheck = {};\n\n  data.forEach( function(series, i)  {\n    series.values.forEach( function(item, j)  {\n\n      var x = xAccessor(item);\n\n      // Check for NaN since d3's Voronoi cannot handle NaN values\n      // Go ahead and Proceed to next iteration since we don't want NaN\n      // in allValues or in xValues or yValues\n      if (isNaN(x)) {\n        return;\n      }\n      xValues.push(x);\n\n      var y = yAccessor(item);\n      // when yAccessor returns an object (as in the case of candlestick)\n      // iterate over the keys and push all the values to yValues array\n      var yNode;\n      if (typeof y === 'object' && Object.keys(y).length > 0) {\n        Object.keys(y).forEach(function (key) {\n          // Check for NaN since d3's Voronoi cannot handle NaN values\n          // Go ahead and Proceed to next iteration since we don't want NaN\n          // in allValues or in xValues or yValues\n          if (isNaN(y[key])) {\n            return;\n          }\n          yValues.push(y[key]);\n          // if multiple y points are to be plotted for a single x\n          // as in the case of candlestick, default to y value of 0\n          yNode = 0;\n        });\n      } else {\n        // Check for NaN since d3's Voronoi cannot handle NaN values\n        // Go ahead and Proceed to next iteration since we don't want NaN\n        // in allValues or in xValues or yValues\n        if (isNaN(y)) {\n          return;\n        }\n        yValues.push(y);\n        yNode = y;\n      }\n\n      var xyCoords = (x + \"-\" + yNode);\n      if (coincidentCoordinateCheck.hasOwnProperty(xyCoords)) {\n        // Proceed to next iteration if the x y pair already exists\n        // d3's Voronoi cannot handle NaN values or coincident coords\n        // But we push them into xValues and yValues above because\n        // we still may handle them there (labels, etc.)\n        return;\n      }\n      coincidentCoordinateCheck[xyCoords] = '';\n\n      var pointItem = {\n        coord: {\n          x: x,\n          y: yNode,\n        },\n        d: item,\n        id: series.name + j,\n        series: series,\n        seriesIndex: i\n      };\n      allValues.push(pointItem);\n    });\n  });\n\n  return {\n    allValues: allValues,\n    xValues: xValues,\n    yValues: yValues\n  };\n};\n\n\nexports.shade = function(hex, percent)  {\n\n  var R, G, B, red, green, blue, number;\n  var min = Math.min, round = Math.round;\n  if(hex.length !== 7) { return hex; }\n  number = parseInt(hex.slice(1), 16);\n  R = number >> 16;\n  G = number >> 8 & 0xFF;\n  B = number & 0xFF;\n  red = min( 255, round( ( 1 + percent ) * R )).toString(16);\n  if (red.length === 1) red = '0' + red;\n  green = min( 255, round( ( 1 + percent ) * G )).toString(16);\n  if (green.length === 1) green = '0' + green;\n  blue = min( 255, round( ( 1 + percent ) * B )).toString(16);\n  if (blue.length === 1) blue = '0' + blue;\n  return (\"#\" +  red +  green +  blue);\n\n};\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/common/index.js":"\nexports.XAxis = require('./axes').XAxis;\nexports.YAxis = require('./axes').YAxis;\nexports.Chart = require('./charts').Chart;\nexports.LegendChart = require('./charts').LegendChart;\nexports.Legend = require('./Legend');\nexports.Voronoi = require('./Voronoi');\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/common/axes/index.js":"\nexports.XAxis = require('./XAxis');\nexports.YAxis = require('./YAxis');\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/common/axes/XAxis.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\nvar AxisTicks = require('./AxisTicks');\nvar AxisLine = require('./AxisLine');\nvar Label = require('./Label');\n\nmodule.exports = React.createClass({\n\n  displayName: 'XAxis',\n\n  propTypes: {\n    fill:            React.PropTypes.string,\n    height:          React.PropTypes.number.isRequired,\n    width:           React.PropTypes.number.isRequired,\n    stroke:          React.PropTypes.string,\n    strokeWidth:     React.PropTypes.string,\n    tickStroke:      React.PropTypes.string,\n    xAxisClassName:  React.PropTypes.string,\n    xAxisLabel:      React.PropTypes.string,\n    xAxisTickValues: React.PropTypes.array,\n    xAxisOffset:     React.PropTypes.number,\n    xScale:          React.PropTypes.func.isRequired,\n    xOrient:         React.PropTypes.oneOf(['top', 'bottom']),\n    yOrient:         React.PropTypes.oneOf(['left', 'right']),\n    gridVertical:  React.PropTypes.bool,\n    gridVerticalStroke: React.PropTypes.string,\n    gridVerticalStrokeWidth: React.PropTypes.number,\n    gridVerticalStrokeDash: React.PropTypes.string\n  },\n\n  getDefaultProps:function() {\n    return {\n      fill:            'none',\n      stroke:          'none',\n      strokeWidth:     '1',\n      tickStroke:      '#000',\n      xAxisClassName:  'rd3-x-axis',\n      xAxisLabel:      '',\n      xAxisLabelOffset: 10,\n      xAxisOffset:      0,\n      xOrient:         'bottom',\n      yOrient:         'left'\n    };\n  },\n\n  render:function() {\n    var props = this.props;\n\n    var t = (\"translate(0 ,\" + (props.xAxisOffset + props.height) + \")\");\n\n    var tickArguments;\n    if (typeof props.xAxisTickCount !== 'undefined') {\n      tickArguments = [props.xAxisTickCount];\n    }\n\n    if (typeof props.xAxisTickInterval !== 'undefined') {\n      tickArguments = [d3.time[props.xAxisTickInterval.unit], props.xAxisTickInterval.interval];\n    }\n\n    return (\n      React.createElement(\"g\", {\n        className: props.xAxisClassName, \n        transform: t\n      }, \n        React.createElement(AxisTicks, {\n          tickValues: props.xAxisTickValues, \n          tickFormatting: props.tickFormatting, \n          tickArguments: tickArguments, \n          tickStroke: props.tickStroke, \n          tickTextStroke: props.tickTextStroke, \n          innerTickSize: props.tickSize, \n          scale: props.xScale, \n          orient: props.xOrient, \n          orient2nd: props.yOrient, \n          height: props.height, \n          width: props.width, \n          gridVertical: props.gridVertical, \n          gridVerticalStroke: props.gridVerticalStroke, \n          gridVerticalStrokeWidth: props.gridVerticalStrokeWidth, \n          gridVerticalStrokeDash: props.gridVerticalStrokeDash}\n        ), \n        React.createElement(AxisLine, React.__spread({\n          scale: props.xScale, \n          stroke: props.stroke, \n          orient: props.xOrient, \n          outerTickSize: props.tickSize}, \n          props)\n        ), \n        React.createElement(Label, {\n          label: props.xAxisLabel, \n          offset: props.xAxisLabelOffset, \n          orient: props.xOrient, \n          margins: props.margins, \n          width: props.width}\n          )\n      )\n    );\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/common/axes/AxisTicks.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nmodule.exports = React.createClass({\n\n  displayName: 'AxisTick',\n\n  propTypes: {\n    scale: React.PropTypes.func.isRequired,\n    orient: React.PropTypes.oneOf(['top','bottom','left','right']).isRequired,\n    orient2nd: React.PropTypes.oneOf(['top','bottom','left','right']),\n    height: React.PropTypes.number.isRequired,\n    width: React.PropTypes.number.isRequired,\n    tickArguments : React.PropTypes.array,\n    tickValues: React.PropTypes.array,\n    innerTickSize: React.PropTypes.number,\n    outerTickSize: React.PropTypes.number,\n    tickPadding: React.PropTypes.number,\n    tickFormat: React.PropTypes.func,\n    tickStroke: React.PropTypes.string,\n    gridHorizontal: React.PropTypes.bool,\n    gridVertical: React.PropTypes.bool,\n    gridHorizontalStroke: React.PropTypes.string,\n    gridVerticalStroke: React.PropTypes.string,\n    gridHorizontalStrokeWidth: React.PropTypes.number,\n    gridVerticalStrokeWidth: React.PropTypes.number,\n    gridHorizontalStrokeDash: React.PropTypes.string,\n    gridVerticalStrokeDash: React.PropTypes.string\n  },\n  getDefaultProps:function() {\n    return {\n      innerTickSize: 6,\n      outerTickSize: 6,\n      tickStroke: '#000',\n      tickPadding: 3,\n      tickArguments: [10],\n      tickValues: null,\n      gridHorizontal: false,\n      gridVertical: false,\n      gridHorizontalStroke: '#D8D7D7',\n      gridVerticalStroke: '#D8D7D7',\n      gridHorizontalStrokeWidth: 1,\n      gridVerticalStrokeWidth: 1,\n      gridHorizontalStrokeDash: '5, 5',\n      gridVerticalStrokeDash: '5, 5'\n    };\n  },\n\n  render:function() {\n    var props = this.props;\n\n    var tr,\n        ticks,\n        scale,\n        adjustedScale,\n        textAnchor,\n        tickFormat,\n        y0, y1, y2, dy, x0, x1, x2, dx;\n\n    var gridStrokeWidth,\n        gridStroke,\n        gridStrokeDashArray,\n        x2grid,\n        y2grid;\n    var gridOn = false;\n\n    var sign = props.orient === 'top' || props.orient === 'right' ? -1 : 1;\n    var tickSpacing = Math.max(props.innerTickSize, 0) + props.tickPadding;\n\n    scale = props.scale;\n\n    if (props.tickValues) {\n      ticks = props.tickValues;\n    } else if (scale.ticks) {\n      ticks = scale.ticks.apply(scale, props.tickArguments);\n    } else {\n      ticks = scale.domain();\n    }\n\n    if (props.tickFormatting) {\n        tickFormat = props.tickFormatting;\n    } else if (scale.tickFormat) {\n        tickFormat = scale.tickFormat.apply(scale, props.tickArguments);\n    } else {\n        tickFormat = function(d) {return d;};\n    }\n\n    adjustedScale = scale.rangeBand ? function(d)  { return scale(d) + scale.rangeBand() / 2; } : scale;\n\n    // Still working on this\n    // Ticks and lines are not fully aligned\n    // in some orientations\n    switch (props.orient) {\n      case 'top':\n        tr = function(tick)  {return (\"translate(\" + adjustedScale(tick) + \",0)\");};\n        textAnchor = \"middle\";\n        y2 = props.innerTickSize * sign;\n        y1 = tickSpacing * sign;\n        dy =  sign < 0 ? \"0em\" : \".71em\";\n        x2grid = 0;\n        y2grid = -props.height;\n        break;\n      case 'bottom':\n        tr = function(tick)  {return (\"translate(\" + adjustedScale(tick) + \",0)\");};\n        textAnchor = \"middle\";\n        y2 = props.innerTickSize * sign;\n        y1 = tickSpacing * sign;\n        dy =  sign < 0 ? \"0em\" : \".71em\";\n        x2grid = 0;\n        y2grid = -props.height;\n        break;\n      case 'left':\n        tr = function(tick)  {return (\"translate(0,\" + adjustedScale(tick) + \")\");};\n        textAnchor = \"end\";\n        x2 = props.innerTickSize * -sign;\n        x1 = tickSpacing * -sign;\n        dy = \".32em\";\n        x2grid = props.width;\n        y2grid = 0;\n        break;\n      case 'right':\n        tr = function(tick)  {return (\"translate(0,\" + adjustedScale(tick) + \")\");};\n        textAnchor = \"start\";\n        x2 = props.innerTickSize * -sign;\n        x1 = tickSpacing * -sign;\n        dy = \".32em\";\n        x2grid = -props.width;\n        y2grid = 0;\n        break;\n    }\n\n    if (props.gridHorizontal) {\n      gridOn = true;\n      gridStrokeWidth = props.gridHorizontalStrokeWidth;\n      gridStroke = props.gridHorizontalStroke;\n      gridStrokeDashArray = props.gridHorizontalStrokeDash;\n    }\n    else if (props.gridVertical) {\n      gridOn = true;\n      gridStrokeWidth = props.gridVerticalStrokeWidth;\n      gridStroke = props.gridVerticalStroke;\n      gridStrokeDashArray = props.gridVerticalStrokeDash;\n    }\n\n    // return grid line if grid is enabled and grid line is not on at same position as other axis.\n    var gridLine = function(pos) {\n      if (gridOn\n        && !(props.orient2nd == 'left' && pos == 0)\n        && !(props.orient2nd == 'right' && pos == props.width)\n        && !((props.orient == 'left' || props.orient == 'right') && pos == props.height)\n      ) {\n        return (\n          React.createElement(\"line\", {style: {\n            strokeWidth: gridStrokeWidth,\n            shapeRendering: 'crispEdges',\n            stroke: gridStroke,\n            strokeDasharray: gridStrokeDashArray\n            }, x2: x2grid, y2: y2grid})\n        )\n      }\n    }\n\n    return (\n    React.createElement(\"g\", null, \n      ticks.map( function(tick, idx)  {\n        return (\n          React.createElement(\"g\", {key: idx, className: \"tick\", transform: tr(tick)}, \n            gridLine(adjustedScale(tick)), \n            React.createElement(\"line\", {style: {shapeRendering:'crispEdges',opacity:'1',stroke:props.tickStroke}, x2: x2, y2: y2}\n            ), \n            React.createElement(\"text\", {\n              strokeWidth: \"0.01\", \n              dy: dy, x: x1, y: y1, \n              style: {stroke:props.tickTextStroke, fill:props.tickTextStroke}, \n              textAnchor: textAnchor\n            }, \n              tickFormat(tick)\n            )\n          )\n        );\n        })\n      \n    )\n    );\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/common/axes/AxisLine.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nmodule.exports = React.createClass({\n\n  displayName: 'AxisLine',\n\n  propTypes: {\n    scale: React.PropTypes.func.isRequired,\n    innerTickSize: React.PropTypes.number,\n    outerTickSize: React.PropTypes.number,\n    tickPadding: React.PropTypes.number,\n    tickArguments: React.PropTypes.array,\n    fill: React.PropTypes.string,\n    stroke: React.PropTypes.string\n  },\n\n  getDefaultProps:function() {\n    return {\n      innerTickSize: 6,\n      outerTickSize: 6,\n      tickPadding: 3,\n      fill: 'none',\n      tickArguments: [10],\n      tickValues: null,\n      tickFormat: null \n    };\n  },\n\n\n  _d3_scaleExtent:function(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [start, stop] : [stop, start];\n  },\n\n  _d3_scaleRange:function(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : this._d3_scaleExtent(scale.range());\n  },\n\n  render:function() {\n\n    var props = this.props;\n    var sign = props.orient === \"top\" || props.orient === \"left\" ? -1 : 1;\n\n    var range = this._d3_scaleRange(props.scale);\n\n    var d;\n\n    if (props.orient === \"bottom\" || props.orient === \"top\") {\n      d = \"M\" + range[0] + \",\" + sign * props.outerTickSize + \"V0H\" + range[1] + \"V\" + sign * props.outerTickSize;\n    } else {\n      d = \"M\" + sign * props.outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * props.outerTickSize;\n    }\n\n\n    return (\n      React.createElement(\"path\", {\n        className: \"domain\", \n        d: d, \n        style: {'shapeRendering':'crispEdges'}, \n        fill: props.fill, \n        stroke: props.stroke, \n        strokeWidth: props.strokeWidth\n      }\n      )\n    );\n  }\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/common/axes/Label.js":"'use strict';\n\nvar React = require('react');\n\n\nmodule.exports = React.createClass({\n\n  displayName: 'Label',\n\n  propTypes: {\n    height:              React.PropTypes.number,\n    horizontalTransform: React.PropTypes.string,\n    label:               React.PropTypes.string.isRequired,\n    width:               React.PropTypes.number,\n    strokeWidth:         React.PropTypes.number,\n    textAnchor:          React.PropTypes.string,\n    verticalTransform:   React.PropTypes.string\n  },\n\n  getDefaultProps:function() {\n    return {\n      horizontalTransform: 'rotate(270)',\n      strokeWidth:         0.01,\n      textAnchor:          'middle',\n      verticalTransform:   'rotate(0)'\n    };\n  },\n\n  render:function() {\n\n    var props = this.props;\n\n    if (props.label) {\n      switch (props.orient) {\n        case 'top':\n          return (\n            React.createElement(\"text\", {\n              strokeWidth: props.strokeWidth.toString(), \n              textAnchor: props.textAnchor, \n              transform: props.verticalTransform, \n              x: props.width / 2, \n              y: props.offset\n            }, \n              props.label\n            )\n          );\n        case 'bottom':\n          return (\n            React.createElement(\"text\", {\n              strokeWidth: props.strokeWidth.toString(), \n              textAnchor: props.textAnchor, \n              transform: props.verticalTransform, \n              x: props.width / 2, \n              y: props.offset\n            }, \n              props.label\n            )\n          );\n        case 'left':\n          return (\n            React.createElement(\"text\", {\n              strokeWidth: props.strokeWidth.toString(), \n              textAnchor: props.textAnchor, \n              transform: props.horizontalTransform, \n              y: -props.offset, \n              x: -props.height / 2\n            }, \n              props.label\n            )\n          );\n        case 'right':\n          return (\n            React.createElement(\"text\", {\n              strokeWidth: props.strokeWidth.toString(), \n              textAnchor: props.textAnchor, \n              transform: props.horizontalTransform, \n              y: props.offset, \n              x: -props.height / 2\n            }, \n              props.label\n            )\n          );\n      }\n    }\n    return React.createElement(\"text\", null);\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/common/axes/YAxis.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\nvar AxisTicks = require('./AxisTicks');\nvar AxisLine = require('./AxisLine');\nvar Label = require('./Label');\n\nmodule.exports = React.createClass({\n\n  displayName: 'YAxis',\n\n  propTypes: {\n    fill:            React.PropTypes.string,\n    stroke:          React.PropTypes.string,\n    strokeWidth:     React.PropTypes.string,\n    tickStroke:      React.PropTypes.string,\n    width:           React.PropTypes.number.isRequired,\n    height:          React.PropTypes.number.isRequired,\n    yAxisClassName:  React.PropTypes.string,\n    yAxisLabel:      React.PropTypes.string,\n    yAxisOffset:     React.PropTypes.number,\n    yAxisTickValues: React.PropTypes.array,\n    xOrient:         React.PropTypes.oneOf(['top', 'bottom']),\n    yOrient:         React.PropTypes.oneOf(['left', 'right']),\n    yScale:          React.PropTypes.func.isRequired,\n    gridVertical: React.PropTypes.bool,\n    gridVerticalStroke: React.PropTypes.string,\n    gridVerticalStrokeWidth: React.PropTypes.number,\n    gridVerticalStrokeDash: React.PropTypes.string\n  },\n\n  getDefaultProps:function() {\n    return {\n      fill:           'none',\n      stroke:         '#000',\n      strokeWidth:    '1',\n      tickStroke:     '#000',\n      yAxisClassName: 'rd3-y-axis',\n      yAxisLabel:     '',\n      yAxisOffset:    0,\n      xOrient:        'bottom',\n      yOrient:        'left'\n    };\n  },\n\n  render:function() {\n\n    var props = this.props;\n\n    var t;\n    if (props.yOrient === 'right') {\n       t = (\"translate(\" + (props.yAxisOffset + props.width) + \", 0)\");\n    } else {\n       t = (\"translate(\" + props.yAxisOffset + \", 0)\");\n    }\n\n    var tickArguments;\n    if (props.yAxisTickCount) {\n      tickArguments = [props.yAxisTickCount];\n    }\n\n    if (props.yAxisTickInterval) {\n      tickArguments = [d3.time[props.yAxisTickInterval.unit], props.yAxisTickInterval.interval];\n    }\n\n    return (\n      React.createElement(\"g\", {\n        className: props.yAxisClassName, \n        transform: t\n      }, \n        React.createElement(AxisTicks, {\n          innerTickSize: props.tickSize, \n          orient: props.yOrient, \n          orient2nd: props.xOrient, \n          tickArguments: tickArguments, \n          tickFormatting: props.tickFormatting, \n          tickStroke: props.tickStroke, \n          tickTextStroke: props.tickTextStroke, \n          tickValues: props.yAxisTickValues, \n          scale: props.yScale, \n          height: props.height, \n          width: props.width, \n          gridHorizontal: props.gridHorizontal, \n          gridHorizontalStroke: props.gridHorizontalStroke, \n          gridHorizontalStrokeWidth: props.gridHorizontalStrokeWidth, \n          gridHorizontalStrokeDash: props.gridHorizontalStrokeDash}\n        ), \n        React.createElement(AxisLine, React.__spread({\n          orient: props.yOrient, \n          outerTickSize: props.tickSize, \n          scale: props.yScale, \n          stroke: props.stroke}, \n          props)\n        ), \n        React.createElement(Label, {\n          height: props.height, \n          label: props.yAxisLabel, \n          margins: props.margins, \n          offset: props.yAxisLabelOffset, \n          orient: props.yOrient}\n        )\n      )\n    );\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/common/charts/index.js":"\nexports.BasicChart = require('./BasicChart');\nexports.Chart = require('./Chart');\nexports.LegendChart = require('./LegendChart');\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/common/charts/BasicChart.js":"'use strict';\n\nvar React = require('react');\nvar mixins = require('../../mixins');\n\nmodule.exports = React.createClass({\n\n  displayName: 'BasicChart',\n\n  propTypes: {\n    children:       React.PropTypes.node,\n    className:      React.PropTypes.string,\n    height:         React.PropTypes.node,\n    svgClassName:   React.PropTypes.string,\n    title:          React.PropTypes.node,\n    titleClassName: React.PropTypes.string,\n    width:          React.PropTypes.node\n  },\n\n  getDefaultProps:function() {\n    return {\n      className:      'rd3-basic-chart',\n      svgClassName:   'rd3-chart',\n      titleClassName: 'rd3-chart-title'\n    };\n  },\n\n  _renderTitle:function() {\n    var props = this.props;\n\n    if (props.title != '' && props.title != null) {\n      return (\n        React.createElement(\"h4\", {\n          className: props.titleClassName\n        }, \n          props.title\n        )\n      );\n    } else {\n      return null;\n    }\n  },\n\n  _renderChart: function() {\n    var props = this.props;\n\n    return (\n      React.createElement(\"svg\", {\n        className: props.svgClassName, \n        height: props.height, \n        viewBox: props.viewBox, \n        width: props.width\n      }, \n        props.children\n      )\n    );\n  },\n\n  render: function() {\n    var props = this.props;\n\n    return (\n      React.createElement(\"div\", {\n        className: props.className\n      }, \n        this._renderTitle(), \n        this._renderChart()\n      )\n    );\n  }\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/mixins/index.js":"\nexports.CartesianChartPropsMixin = require('./CartesianChartPropsMixin');\nexports.ViewBoxMixin = require('./ViewBoxMixin');\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/mixins/CartesianChartPropsMixin.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nmodule.exports =  {\n\n  propTypes: {\n    axesColor:         React.PropTypes.string,\n    colors:            React.PropTypes.func,\n    colorAccessor:     React.PropTypes.func,\n    data:              React.PropTypes.array.isRequired,\n    height:            React.PropTypes.number,\n    legend:            React.PropTypes.bool,\n    legendOffset:      React.PropTypes.number,\n    title:             React.PropTypes.string,\n    width:             React.PropTypes.number,\n    xAccessor:         React.PropTypes.func,\n    xAxisFormatter:    React.PropTypes.func,\n    xAxisLabel:        React.PropTypes.string,\n    xAxisLabelOffset:  React.PropTypes.number,\n    xAxisTickCount:    React.PropTypes.number,\n    xAxisTickInterval: React.PropTypes.object,\n    xAxisTickValues:   React.PropTypes.array,\n    xOrient:           React.PropTypes.oneOf(['top', 'bottom']),\n    yAccessor:         React.PropTypes.func,\n    yAxisFormatter:    React.PropTypes.func,\n    yAxisLabel:        React.PropTypes.string,\n    yAxisLabelOffset:  React.PropTypes.number,\n    yAxisTickCount:    React.PropTypes.number,\n    yAxisTickInterval: React.PropTypes.object,\n    yAxisTickValues:   React.PropTypes.array,\n    yOrient:           React.PropTypes.oneOf(['left', 'right'])\n  },\n\n  getDefaultProps: function() {\n    return {\n      axesColor:        '#000',\n      colors:           d3.scale.category20c(),\n      colorAccessor:    function(d, idx)  {return idx;},\n      height:           200,\n      legend:           false,\n      legendOffset:     120,\n      title:            '',\n      width:            400,\n      xAccessor:        function(d)  {return d.x;},\n      // xAxisFormatter: no predefined value right now\n      xAxisLabel:       '',\n      xAxisLabelOffset: 38,\n      // xAxisTickCount: no predefined value right now\n      // xAxisTickInterval: no predefined value right now\n      // xAxisTickValues: no predefined value right now\n      xOrient:          'bottom',\n      yAccessor:        function(d)  {return d.y;},\n      // yAxisFormatter: no predefined value right now\n      yAxisLabel:       '',\n      yAxisLabelOffset: 35,\n      // yAxisTickCount: no predefined value right now\n      // yAxisTickInterval: no predefined value right now\n      // yAxisTickValues: no predefined value right now\n      yOrient:          'left'\n    };\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/mixins/ViewBoxMixin.js":"\n'use strict';\n\nvar React = require('react');\n\nmodule.exports =  {\n\n  propTypes: {\n    viewBox:           React.PropTypes.string,\n    viewBoxObject:     React.PropTypes.object\n  },\n\n  getViewBox:function() {\n    if (this.props.viewBoxObject) {\n      var v = this.props.viewBoxObject;\n      return [v.x, v.y, v.width, v.height].join(' ');\n    } else if (this.props.viewBox) {\n      return this.props.viewBox;\n    } \n  },\n\n  getOuterDimensions:function() {\n    if (this.props.viewBoxObject) {\n      return {\n        width: this.props.viewBoxObject.width,\n        height: this.props.viewBoxObject.height\n      };\n    } else {\n      return {\n        width: this.props.width,\n        height: this.props.height\n      };\n    }\n  }\n\n};\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/common/charts/Chart.js":"'use strict';\n\nvar React = require('react');\nvar LegendChart = require('./LegendChart');\nvar BasicChart = require('./BasicChart');\n\nmodule.exports = React.createClass({\n\n  displayName: 'Chart',\n\n  propTypes: {\n    legend:         React.PropTypes.bool,\n    svgClassName:   React.PropTypes.string,\n    titleClassName: React.PropTypes.string\n  },\n\n  getDefaultProps: function() {\n    return {\n      legend:         false,\n      svgClassName:   'rd3-chart',\n      titleClassName: 'rd3-chart-title'\n    };\n  },\n\n  render: function() {\n    var props = this.props;\n\n    if (props.legend) {\n      return (\n        React.createElement(LegendChart, React.__spread({\n          svgClassName: props.svgClassName, \n          titleClassName: props.titleClassName}, \n          this.props)\n        )\n      );\n    }\n    return (\n      React.createElement(BasicChart, React.__spread({\n        svgClassName: props.svgClassName, \n        titleClassName: props.titleClassName}, \n        this.props)\n      )\n    );\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/common/charts/LegendChart.js":"'use strict';\n\nvar React = require('react');\nvar Legend = require('../Legend');\nvar d3 = require('d3');\n\nmodule.exports = React.createClass({\n\n  displayName: 'LegendChart',\n\n  propTypes: {\n    children:       React.PropTypes.node,\n    createClass:    React.PropTypes.string,\n    colors:         React.PropTypes.func,\n    colorAccessor:  React.PropTypes.func,\n    data:           React.PropTypes.array,\n    height:         React.PropTypes.node,\n    legend:         React.PropTypes.bool,\n    legendPosition: React.PropTypes.string,\n    margins:        React.PropTypes.object,\n    sideOffset:     React.PropTypes.number,\n    svgClassName:   React.PropTypes.string,\n    title:          React.PropTypes.node,\n    titleClassName: React.PropTypes.string,\n    viewBox:        React.PropTypes.string,\n    width:          React.PropTypes.node\n  },\n\n  getDefaultProps:function() {\n    return {\n      className:      'rd3-legend-chart',\n      colors:         d3.scale.category20c(),\n      colorAccessor:  function(d, idx)  {return idx;},\n      data:           [],\n      legend:         false,\n      legendPosition: 'right',\n      sideOffset:     90,\n      svgClassName:   'rd3-chart',\n      titleClassName: 'rd3-chart-title'\n    };\n  },\n\n  _renderLegend:function() {\n    var props = this.props;\n\n    if (props.legend) {\n      return (\n        React.createElement(Legend, {\n          colors: props.colors, \n          colorAccessor: props.colorAccessor, \n          data: props.data, \n          legendPosition: props.legendPosition, \n          margins: props.margins, \n          width: props.sideOffset}\n        )\n      );\n    }\n  },\n\n  _renderTitle:function() {\n    var props = this.props;\n\n    if (props.title != '' && props.title != null) {\n      return (\n        React.createElement(\"h4\", {\n          className: props.titleClassName\n        }, \n          props.title\n        )\n      );\n    }\n    return null;\n  },\n\n  _renderChart: function() {\n    var props = this.props;\n\n    return (\n      React.createElement(\"svg\", {\n        className: props.svgClassName, \n        height: \"100%\", \n        viewBox: props.viewBox, \n        width: \"100%\"\n      }, \n        props.children\n      )\n    );\n  },\n\n  render:function() {\n    var props = this.props;\n\n    return (\n      React.createElement(\"div\", {\n        className: props.className, \n        style: {'width': props.width, 'height': props.height}\n      }, \n        this._renderTitle(), \n        React.createElement(\"div\", {style: { display: 'table', width: '100%', height: '100%'}}, \n          React.createElement(\"div\", {style: { display: 'table-cell'}}, \n            this._renderChart()\n          ), \n          React.createElement(\"div\", {style: { display: 'table-cell', width: props.sideOffset, 'verticalAlign': 'top'}}, \n            this._renderLegend()\n          )\n        )\n      )\n    );\n  }\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/common/Legend.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nmodule.exports = React.createClass({\n\n  displayName: 'Legend',\n\n  propTypes: {\n    className:     React.PropTypes.string,\n    colors:        React.PropTypes.func,\n    colorAccessor: React.PropTypes.func,\n    data:          React.PropTypes.array.isRequired,\n    itemClassName: React.PropTypes.string,\n    margins:       React.PropTypes.object,\n    text:          React.PropTypes.string,\n    width:         React.PropTypes.number.isRequired\n  },\n\n  getDefaultProps: function() {\n    return {\n      className:    'rd3-legend',\n      colors:        d3.scale.category20c(),\n      colorAccessor: function(d, idx)  {return idx;},\n      itemClassName: 'rd3-legend-item',\n      text:          '#000'\n    };\n  },\n\n  render: function() {\n\n    var props = this.props;\n\n    var textStyle = {\n      'color': 'black',\n      'fontSize': '50%',\n      'verticalAlign': 'top'\n    };\n\n    var legendItems = [];\n\n    props.data.forEach( function(series, idx)  {\n      var itemStyle = {\n        'color': props.colors(props.colorAccessor(series, idx)),\n        'lineHeight': '60%',\n        'fontSize': '200%'\n      };\n\n      legendItems.push(\n        React.createElement(\"li\", {\n          key: idx, \n          className: props.itemClassName, \n          style: itemStyle\n        }, \n          React.createElement(\"span\", {\n            style: textStyle\n          }, \n            series.name\n          )\n        )\n      );\n\n    });\n\n    var topMargin = props.margins.top;\n\n    var legendBlockStyle = {\n      'wordWrap': 'break-word',\n      'width': props.width,\n      'paddingLeft': '0',\n      'marginBottom': '0',\n      'marginTop': topMargin,\n      'listStylePosition': 'inside'\n    };\n\n    return (\n      React.createElement(\"ul\", {\n        className: props.className, \n        style: legendBlockStyle\n      }, \n        legendItems\n      )\n    );\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/common/Voronoi.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nvar Polygon = React.createClass({displayName: \"Polygon\",\n\n  _animateCircle: function() {\n    this.props.structure.cursor('voronoi').cursor(this.props.id).update(function(){return 'active';});\n    // this.props.pubsub.emit('animate', this.props.id);\n  },\n\n  _restoreCircle: function() {\n    this.props.structure.cursor('voronoi').cursor(this.props.id).update(function(){return 'inactive';});\n    // this.props.pubsub.emit('restore', this.props.id);\n  },\n\n  _drawPath: function(d) {\n    if(d === undefined) {\n      return; \n    }  \n    return 'M' + d.join(',') + 'Z';\n  },\n\n  render: function() {\n    return React.createElement(\"path\", {\n      onMouseOver: this._animateCircle, \n      onMouseOut: this._restoreCircle, \n      fill: \"white\", \n      opacity: \"0\", \n      d: this._drawPath(this.props.vnode)});\n  }\n\n});\n\n\nmodule.exports = React.createClass({\n\n  displayName: 'Voronoi',\n\n  render: function() {\n    var xScale = this.props.xScale;\n    var yScale = this.props.yScale;\n\n    var voronoi = d3.geom.voronoi()\n      .x(function(d){ return xScale(d.coord.x); })\n      .y(function(d){ return yScale(d.coord.y); })\n      .clipExtent([[0, 0], [ this.props.width , this.props.height]]);\n\n    var regions = voronoi(this.props.data).map(function(vnode, idx) {\n      return React.createElement(Polygon, {structure: this.props.structure, key: idx, id: vnode.point.id, vnode: vnode});\n    }.bind(this));\n\n    return (\n      React.createElement(\"g\", null, \n        regions\n      )\n    );\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/linechart/index.js":"\nexports.LineChart = require('./LineChart');\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/linechart/LineChart.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\nvar $__0=      require('../common'),Chart=$__0.Chart,XAxis=$__0.XAxis,YAxis=$__0.YAxis;\nvar DataSeries = require('./DataSeries');\nvar utils = require('../utils');\nvar $__1=     require('../mixins'),CartesianChartPropsMixin=$__1.CartesianChartPropsMixin,ViewBoxMixin=$__1.ViewBoxMixin;\n\nmodule.exports = React.createClass({\n\n  mixins: [ CartesianChartPropsMixin, ViewBoxMixin ],\n\n  displayName: 'LineChart',\n\n  propTypes: {\n    circleRadius:   React.PropTypes.number,\n    hoverAnimation: React.PropTypes.bool,\n    margins:        React.PropTypes.object,\n },\n\n  getDefaultProps:function() {\n    return {\n      circleRadius:    3,\n      className: 'rd3-linechart',\n      hoverAnimation: true,\n      margins:        {top: 10, right: 20, bottom: 50, left: 45},\n      xAxisClassName: 'rd3-linechart-xaxis',\n      yAxisClassName: 'rd3-linechart-yaxis',\n    };\n  },\n\n  _calculateScales: utils.calculateScales,\n\n  render:function() {\n\n    var props = this.props;\n\n    if (this.props.data && this.props.data.length < 1) {\n      return null;\n    }\n\n    // Calculate inner chart dimensions\n    var innerWidth, innerHeight;\n\n    innerWidth = this.getOuterDimensions().width - props.margins.left - props.margins.right;\n    innerHeight = this.getOuterDimensions().height - props.margins.top - props.margins.bottom;\n\n    if (!Array.isArray(props.data)) {\n      props.data = [props.data];\n    }\n\n    // Returns an object of flattened allValues, xValues, and yValues\n    var flattenedData = utils.flattenData(props.data, props.xAccessor, props.yAccessor);\n\n    var allValues = flattenedData.allValues,\n        xValues = flattenedData.xValues,\n        yValues = flattenedData.yValues;\n    var scales = this._calculateScales(innerWidth, innerHeight, xValues, yValues);\n    var trans = \"translate(\" + (props.yAxisOffset < 0 ? props.margins.left + Math.abs(props.yAxisOffset) : props.margins.left) + \",\" + props.margins.top + \")\";\n\n    return (\n      React.createElement(Chart, {\n        viewBox: this.getViewBox(), \n        legend: props.legend, \n        data: props.data, \n        margins: props.margins, \n        colors: props.colors, \n        colorAccessor: props.colorAccessor, \n        width: props.width, \n        height: props.height, \n        title: props.title}, \n        React.createElement(\"g\", {transform: trans, className: props.className}, \n          React.createElement(XAxis, {\n            xAxisClassName: props.xAxisClassName, \n            strokeWidth: props.xAxisStrokeWidth, \n            xAxisTickValues: props.xAxisTickValues, \n            xAxisTickInterval: props.xAxisTickInterval, \n            xAxisOffset: props.xAxisOffset, \n            xScale: scales.xScale, \n            xAxisLabel: props.xAxisLabel, \n            xAxisLabelOffset: props.xAxisLabelOffset, \n            tickFormatting: props.xAxisFormatter, \n            xOrient: props.xOrient, \n            yOrient: props.yOrient, \n            data: props.data, \n            margins: props.margins, \n            width: innerWidth, \n            height: innerHeight, \n            stroke: props.axesColor, \n            gridVertical: props.gridVertical, \n            gridVerticalStroke: props.gridVerticalStroke, \n            gridVerticalStrokeWidth: props.gridVerticalStrokeWidth, \n            gridVerticalStrokeDash: props.gridVerticalStrokeDash}\n          ), \n          React.createElement(YAxis, {\n            yAxisClassName: props.yAxisClassName, \n            strokeWidth: props.yAxisStrokeWidth, \n            yScale: scales.yScale, \n            yAxisTickValues: props.yAxisTickValues, \n            yAxisTickCount: props.yAxisTickCount, \n            yAxisOffset: props.yAxisOffset, \n            yAxisLabel: props.yAxisLabel, \n            yAxisLabelOffset: props.yAxisLabelOffset, \n            tickFormatting: props.yAxisFormatter, \n            xOrient: props.xOrient, \n            yOrient: props.yOrient, \n            margins: props.margins, \n            width: innerWidth, \n            height: innerHeight, \n            stroke: props.axesColor, \n            gridHorizontal: props.gridHorizontal, \n            gridHorizontalStroke: props.gridHorizontalStroke, \n            gridHorizontalStrokeWidth: props.gridHorizontalStrokeWidth, \n            gridHorizontalStrokeDash: props.gridHorizontalStrokeDash}\n          ), \n          React.createElement(DataSeries, {\n            xScale: scales.xScale, \n            yScale: scales.yScale, \n            xAccessor: props.xAccessor, \n            yAccessor: props.yAccessor, \n            hoverAnimation: props.hoverAnimation, \n            circleRadius: props.circleRadius, \n            data: props.data, \n            value: allValues, \n            interpolationType: props.interpolationType, \n            colors: props.colors, \n            colorAccessor: props.colorAccessor, \n            width: innerWidth, \n            height: innerHeight}\n            )\n        )\n      )\n    );\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/linechart/DataSeries.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\nvar VoronoiCircleContainer = require('./VoronoiCircleContainer');\nvar Line = require('./Line');\n\nmodule.exports = React.createClass({\n\n  displayName: 'DataSeries',\n\n  propTypes: {\n    color: React.PropTypes.func,\n    colorAccessor: React.PropTypes.func,\n    data: React.PropTypes.array,\n    interpolationType: React.PropTypes.string,\n    xAccessor: React.PropTypes.func,\n    yAccessor: React.PropTypes.func,\n  },\n\n  getDefaultProps:function() {\n    return {\n      data: [],\n      xAccessor: function(d)  {return d.x;},\n      yAccessor: function(d)  {return d.y;},\n      interpolationType: 'linear'\n    };\n  },\n  \n  _isDate:function(d, accessor) {\n      return Object.prototype.toString.call(accessor(d)) === '[object Date]';\n  },\n\n  render:function() {\n    var props = this.props;\n    var xScale = props.xScale;\n    var yScale = props.yScale;\n    var xAccessor = props.xAccessor,\n        yAccessor = props.yAccessor;\n    \n    var interpolatePath = d3.svg.line()\n        .y( function(d)  {return props.yScale(yAccessor(d));} )\n        .interpolate(props.interpolationType);\n\n        if (this._isDate(props.data[0].values[0], xAccessor)) {\n          interpolatePath.x(function(d) {\n            return props.xScale(props.xAccessor(d).getTime());\n          });\n        } else {\n          interpolatePath.x(function(d) {\n            return props.xScale(props.xAccessor(d));\n          });\n        }\n\n    var lines = props.data.map(function(series, idx)  {\n      return (\n        React.createElement(Line, {\n          path: interpolatePath(series.values), \n          stroke: props.colors(props.colorAccessor(series, idx)), \n          strokeWidth: series.strokeWidth, \n          strokeDashArray: series.strokeDashArray, \n          seriesName: series.name, \n          key: idx}\n        )\n      );\n    });\n\n    var voronoi = d3.geom.voronoi()\n      .x(function(d){ return xScale(d.coord.x); })\n      .y(function(d){ return yScale(d.coord.y); })\n      .clipExtent([[0, 0], [ props.width , props.height]]);\n\n    var cx, cy, circleFill;\n    var regions = voronoi(props.value).map(function(vnode, idx) {\n      var point = vnode.point.coord;\n      if (Object.prototype.toString.call(xAccessor(point)) === '[object Date]') {\n        cx = props.xScale(xAccessor(point).getTime());\n      } else {\n        cx = props.xScale(xAccessor(point));\n      }\n      if (Object.prototype.toString.call(yAccessor(point)) === '[object Date]') {\n        cy = props.yScale(yAccessor(point).getTime());\n      } else {\n        cy = props.yScale(yAccessor(point));\n      }\n      circleFill = props.colors(props.colorAccessor(vnode, vnode.point.seriesIndex));\n      \n      return (\n          React.createElement(VoronoiCircleContainer, {\n              key: idx, \n              circleFill: circleFill, \n              vnode: vnode, \n              cx: cx, cy: cy, \n              circleRadius: props.circleRadius}\n          )\n      );\n    }.bind(this));\n\n    return (\n      React.createElement(\"g\", null, \n        React.createElement(\"g\", null, regions), \n        React.createElement(\"g\", null, lines)\n      )\n    );\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/linechart/VoronoiCircleContainer.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\nvar shade = require('../utils').shade;\nvar VoronoiCircle = require('./VoronoiCircle');\n\nmodule.exports = React.createClass({\n\n  displayName: 'VornoiCircleContainer',\n\n  getDefaultProps:function() {\n    return { \n      circleRadius: 3,\n      circleFill: '#1f77b4',\n      hoverAnimation: true\n    };\n  },\n\n  getInitialState:function() {\n    return { \n      circleRadius: this.props.circleRadius,\n      circleFill: this.props.circleFill\n    };\n  },\n\n  render:function() {\n\n    var props = this.props;\n\n    // animation controller\n    var handleMouseOver, handleMouseLeave;\n    if(props.hoverAnimation) {\n      handleMouseOver = this._animateCircle;\n      handleMouseLeave = this._restoreCircle;\n    } else {\n      handleMouseOver = handleMouseLeave = null;\n    }\n\n    return (\n      React.createElement(\"g\", null, \n        React.createElement(VoronoiCircle, {\n            handleMouseOver: handleMouseOver, \n            handleMouseLeave: handleMouseLeave, \n            voronoiPath: this._drawPath(props.vnode), \n            cx: props.cx, \n            cy: props.cy, \n            circleRadius: this.state.circleRadius, \n            circleFill: this.state.circleFill}\n        )\n      )\n    );\n  },\n\n  _animateCircle:function() {\n    this.setState({ \n      circleRadius: this.props.circleRadius * ( 5 / 4 ),\n      circleFill: shade(this.props.circleFill, 0.2)\n    });\n  },\n\n  _restoreCircle:function() {\n    this.setState({ \n      circleRadius: this.props.circleRadius,\n      circleFill: this.props.circleFill\n    });\n  },\n\n  _drawPath: function(d) {\n    if(d === undefined) {\n      return; \n    }  \n    return 'M' + d.join(',') + 'Z';\n  },\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/linechart/VoronoiCircle.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nmodule.exports = React.createClass({\n\n  displayName: 'VoronoiCircle',\n\n  getDefaultProps:function() {\n    return { \n      circleRadius: 3,\n      circleFill: '#1f77b4',\n    };\n  },\n\n  render:function() {\n    return (\n      React.createElement(\"g\", null, \n        React.createElement(\"path\", {\n          onMouseOver: this.props.handleMouseOver, \n          onMouseLeave: this.props.handleMouseLeave, \n          fill: \"transparent\", \n          d: this.props.voronoiPath}\n        ), \n        React.createElement(\"circle\", {\n          onMouseOver: this.props.handleMouseOver, \n          onMouseLeave: this.props.handleMouseLeave, \n          cx: this.props.cx, \n          cy: this.props.cy, \n          r: this.props.circleRadius, \n          fill: this.props.circleFill, \n          className: \"rd3-linechart-circle\"}\n        )\n      )\n    );\n  },\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/linechart/Line.js":"'use strict';\n\nvar React = require('react');\n\n\nmodule.exports = React.createClass({\n\n  displayName: 'Line',\n\n  propTypes: {\n    fill: React.PropTypes.string,\n    path: React.PropTypes.string,\n    stroke: React.PropTypes.string,\n    strokeWidth: React.PropTypes.number,\n    strokeDashArray: React.PropTypes.string,\n  },\n\n  getDefaultProps:function() {\n    return {\n      stroke: '#3182bd',\n      fill: 'none',\n      strokeWidth: 1,\n      className: 'rd3-linechart-path'\n    };\n  },\n\n  render:function() {\n    var props = this.props;\n    return (\n      React.createElement(\"path\", {\n        d: props.path, \n        stroke: props.stroke, \n        strokeWidth: props.strokeWidth, \n        strokeDasharray: props.strokeDashArray, \n        fill: props.fill, \n        className: props.className}\n      )\n    );\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/piechart/index.js":"\nexports.PieChart = require('./PieChart');\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/piechart/PieChart.js":"'use strict';\n\nvar d3 = require('d3');\nvar React = require('react');\nvar DataSeries = require('./DataSeries');\nvar Chart = require('../common').Chart;\n\nmodule.exports = React.createClass({\n\n  displayName: 'PieChart',\n\n  propTypes: {\n    data:               React.PropTypes.array,\n    radius:             React.PropTypes.number,\n    cx:                 React.PropTypes.number,\n    cy:                 React.PropTypes.number,\n    labelTextFill:      React.PropTypes.string,\n    valueTextFill:      React.PropTypes.string,\n    valueTextFormatter: React.PropTypes.func,\n    colors:             React.PropTypes.func,\n    colorAccessor:      React.PropTypes.func,\n    title:              React.PropTypes.string,\n    showInnerLabels:    React.PropTypes.bool,\n    showOuterLabels:    React.PropTypes.bool,\n    sectorBorderColor:  React.PropTypes.string,\n    hoverAnimation:     React.PropTypes.bool\n  },\n\n  getDefaultProps: function() {\n    return {\n      data:               [],\n      title:              '',\n      colors:             d3.scale.category20c(),\n      colorAccessor:      function(d, idx)  {return idx;},\n      valueTextFormatter: function(val)  {return ( val + \"%\");},\n      hoverAnimation:     true\n    };\n  },\n\n  render: function() {\n    var props = this.props;\n\n    var transform = (\"translate(\" + ( props.cx || props.width/2) + \",\" + ( props.cy || props.height/2) + \")\");\n\n    var values = props.data.map( function(item)  {return item.value;} );\n    var labels = props.data.map( function(item)  {return item.label;} );\n\n    return (\n      React.createElement(Chart, {\n        width: props.width, \n        height: props.height, \n        title: props.title\n      }, \n        React.createElement(\"g\", {className: \"rd3-piechart\"}, \n          React.createElement(DataSeries, {\n            labelTextFill: props.labelTextFill, \n            valueTextFill: props.valueTextFill, \n            valueTextFormatter: props.valueTextFormatter, \n            data: props.data, \n            values: values, \n            labels: labels, \n            colors: props.colors, \n            colorAccessor: props.colorAccessor, \n            transform: transform, \n            width: props.width, \n            height: props.height, \n            radius: props.radius, \n            innerRadius: props.innerRadius, \n            showInnerLabels: props.showInnerLabels, \n            showOuterLabels: props.showOuterLabels, \n            sectorBorderColor: props.sectorBorderColor, \n            hoverAnimation: props.hoverAnimation}\n          )\n        )\n      )\n    );\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/piechart/DataSeries.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\nvar ArcContainer = require('./ArcContainer');\n\n\nmodule.exports = React.createClass({\n\n  displayName: 'DataSeries',\n\n  propTypes: {\n    data:              React.PropTypes.array,\n    values:            React.PropTypes.array,\n    labels:            React.PropTypes.array,\n    transform:         React.PropTypes.string,\n    innerRadius:       React.PropTypes.number,\n    radius:            React.PropTypes.number,\n    colors:            React.PropTypes.func,\n    colorAccessor:     React.PropTypes.func,\n    showInnerLabels:   React.PropTypes.bool,\n    showOuterLabels:   React.PropTypes.bool,\n    sectorBorderColor: React.PropTypes.string\n  },\n\n  getDefaultProps:function() {\n    return {\n      data:          [],\n      innerRadius:   0,\n      colors:        d3.scale.category20c(),\n      colorAccessor: function(d, idx)  {return idx;}\n    };\n  },\n\n  render:function() {\n\n    var props = this.props;\n\n    var pie = d3.layout\n      .pie()\n      .sort(null);\n\n    var arcData = pie(props.values);\n\n    var arcs = arcData.map(function(arc, idx)  {\n      return (\n        React.createElement(ArcContainer, {\n          key: idx, \n          startAngle: arc.startAngle, \n          endAngle: arc.endAngle, \n          outerRadius: props.radius, \n          innerRadius: props.innerRadius, \n          labelTextFill: props.labelTextFill, \n          valueTextFill: props.valueTextFill, \n          valueTextFormatter: props.valueTextFormatter, \n          fill: props.colors(props.colorAccessor(props.data[idx], idx)), \n          value: props.values[idx], \n          label: props.labels[idx], \n          width: props.width, \n          showInnerLabels: props.showInnerLabels, \n          showOuterLabels: props.showOuterLabels, \n          sectorBorderColor: props.sectorBorderColor, \n          hoverAnimation: props.hoverAnimation}\n        )\n      );\n    });\n    return (\n      React.createElement(\"g\", {className: \"rd3-piechart-pie\", transform: props.transform}, \n        arcs\n      )\n    );\n  }\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/piechart/ArcContainer.js":"'use strict';\n\nvar React = require('react');\nvar shade = require('../utils').shade;\nvar Arc = require('./Arc');\n\nmodule.exports = React.createClass({\n\n  displayName: 'ArcContainer',\n\n  propTypes: {\n    fill: React.PropTypes.string\n  },\n\n  getInitialState:function() {\n    return {\n      // fill is named as fill instead of initialFill to avoid\n      // confusion when passing down props from top parent\n      fill: this.props.fill\n    };\n  },\n\n  render:function() {\n\n    var props = this.props;\n    \n    return (\n      React.createElement(Arc, React.__spread({},  \n        this.props, \n        {fill: this.state.fill, \n        handleMouseOver: props.hoverAnimation ? this._animateArc : null, \n        handleMouseLeave: props.hoverAnimation ? this._restoreArc : null})\n      )\n    );\n  },\n\n  _animateArc:function() {\n    this.setState({\n      fill: shade(this.props.fill, 0.2)\n    });\n  },\n\n  _restoreArc:function() {\n    this.setState({\n      fill: this.props.fill\n    });\n  }\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/piechart/Arc.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\n\nmodule.exports = React.createClass({\n\n  displayName: 'Arc',\n\n  propTypes: {\n    fill: React.PropTypes.string,\n    d: React.PropTypes.string,\n    startAngle: React.PropTypes.number,\n    endAngle: React.PropTypes.number,\n    innerRadius: React.PropTypes.number,\n    outerRadius: React.PropTypes.number,\n    labelTextFill: React.PropTypes.string,\n    valueTextFill: React.PropTypes.string,\n    sectorBorderColor: React.PropTypes.string,\n    showInnerLabels: React.PropTypes.bool,\n    showOuterLabels: React.PropTypes.bool\n  },\n\n  getDefaultProps:function() {\n    return {\n      labelTextFill: 'black',\n      valueTextFill: 'white',\n      showInnerLabels: true,\n      showOuterLabels: true\n    };\n  },\n\n  render:function() {\n    var props = this.props;\n\n    var arc = d3.svg.arc()\n      .innerRadius(props.innerRadius)\n      .outerRadius(props.outerRadius)\n      .startAngle(props.startAngle)\n      .endAngle(props.endAngle);\n\n    return (\n      React.createElement(\"g\", {className: \"rd3-piechart-arc\"}, \n        React.createElement(\"path\", {\n          d: arc(), \n          fill: props.fill, \n          stroke: props.sectorBorderColor, \n          onMouseOver: props.handleMouseOver, \n          onMouseLeave: props.handleMouseLeave}\n        ), \n        props.showOuterLabels ? this.renderOuterLabel(props, arc) : null, \n        props.showInnerLabels ? this.renderInnerLabel(props, arc) : null\n      )\n    );\n  },\n\n  renderInnerLabel:function(props, arc) {\n    // make value text can be formatted\n    var formattedValue = props.valueTextFormatter(props.value);\n    return (\n        React.createElement(\"text\", {\n          className: \"rd3-piechart-value\", \n          transform: (\"translate(\" + arc.centroid() + \")\"), \n          dy: \".35em\", \n          style: {\n            'shapeRendering': 'crispEdges',\n            'textAnchor': 'middle',\n            'fill': props.valueTextFill\n          }}, \n           formattedValue \n        )\n      );\n  },\n\n  renderOuterLabel:function(props, arc) {\n\n    var rotate = (\"rotate(\" + ( (props.startAngle+props.endAngle)/2 * (180/Math.PI)) + \")\");\n    var positions = arc.centroid();\n    var radius = props.outerRadius;\n    var dist   = radius + 35;\n    var angle  = (props.startAngle + props.endAngle) / 2;\n    var x      = dist * (1.2 * Math.sin(angle));\n    var y      = -dist * Math.cos(angle);\n    var t = (\"translate(\" + x + \",\" + y + \")\");\n\n    return  (\n      React.createElement(\"g\", null, \n        React.createElement(\"line\", {\n          x1: \"0\", \n          x2: \"0\", \n          y1: -radius - 2, \n          y2: -radius - 26, \n          stroke: props.labelTextFill, \n          transform: rotate, \n          style: {\n            'fill': props.labelTextFill,\n            'strokeWidth': 2\n          }\n          }\n        ), \n        React.createElement(\"text\", {\n          className: \"rd3-piechart-label\", \n          transform: t, \n          dy: \".35em\", \n          style: {\n            'textAnchor': 'middle',\n            'fill': props.labelTextFill,\n            'shapeRendering': 'crispEdges'\n          }}, \n          props.label\n        )\n      )\n    );\n  }\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/areachart/index.js":"\nexports.AreaChart = require('./AreaChart');\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/areachart/AreaChart.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\nvar DataSeries = require('./DataSeries');\nvar $__0=      require('../common'),Chart=$__0.Chart,XAxis=$__0.XAxis,YAxis=$__0.YAxis;\nvar $__1=     require('../mixins'),CartesianChartPropsMixin=$__1.CartesianChartPropsMixin,ViewBoxMixin=$__1.ViewBoxMixin;\n\nmodule.exports = React.createClass({\n\n  mixins: [ CartesianChartPropsMixin, ViewBoxMixin ],\n\n  displayName: 'AreaChart',\n\n  propTypes: {\n    margins:           React.PropTypes.object,\n    interpolate:       React.PropTypes.bool,\n    interpolationType: React.PropTypes.string,\n    hoverAnimation:    React.PropTypes.bool,\n },\n\n  getDefaultProps:function() {\n    return {\n      margins: {top: 10, right: 20, bottom: 40, left: 45},\n      yAxisTickCount: 4,\n      interpolate: false,\n      interpolationType: null,\n      className: 'rd3-areachart',\n      hoverAnimation: true\n    };\n  },\n\n  render:function() {\n\n    var props = this.props;\n\n    var data = props.data;\n\n    var interpolationType = props.interpolationType || (props.interpolate ? 'cardinal' : 'linear');\n\n    // Calculate inner chart dimensions\n    var innerWidth, innerHeight;\n    innerWidth = this.getOuterDimensions().width - props.margins.left - props.margins.right;\n    innerHeight = this.getOuterDimensions().height - props.margins.top - props.margins.bottom;\n\n    if (!Array.isArray(data)) {\n      data = [data];\n    }\n\n    var yScale = d3.scale.linear()\n      .range([innerHeight, 0]);\n\n    var xValues = [];\n    var yValues = [];\n    var seriesNames = [];\n    var yMaxValues = [];\n    data.forEach( function(series)  {\n      var upper = 0;\n      seriesNames.push(series.name);\n      series.values.forEach(function(val, idx)  {\n        upper = Math.max(upper, props.yAccessor(val));\n        xValues.push(props.xAccessor(val));\n        yValues.push(props.yAccessor(val));\n      });\n      yMaxValues.push(upper);\n    });\n\n    var xScale;\n    if (xValues.length > 0 && Object.prototype.toString.call(xValues[0]) === '[object Date]' && props.xAxisTickInterval) {\n      xScale = d3.time.scale()\n        .range([0, innerWidth]);\n    } else {\n      xScale = d3.scale.linear()\n        .range([0, innerWidth]);\n    }\n\n    xScale.domain(d3.extent(xValues));\n    yScale.domain([0, d3.sum(yMaxValues)]);\n\n    props.colors.domain(seriesNames);\n\n    var stack = d3.layout.stack()\n      .x(props.xAccessor)\n      .y(props.yAccessor)\n      .values(function(d) { return d.values; });\n\n    var layers = stack(data);\n\n    var trans = (\"translate(\" +  props.margins.left + \",\" +  props.margins.top + \")\");\n\n    var dataSeries = layers.map( function(d, idx)  {\n      return (\n          React.createElement(DataSeries, {\n            key: idx, \n            seriesName: d.name, \n            fill: props.colors(props.colorAccessor(d, idx)), \n            index: idx, \n            xScale: xScale, \n            yScale: yScale, \n            data: d.values, \n            xAccessor: props.xAccessor, \n            yAccessor: props.yAccessor, \n            interpolationType: interpolationType, \n            hoverAnimation: props.hoverAnimation}\n          )\n        );\n      });\n\n    return (\n      React.createElement(Chart, {\n        viewBox: this.getViewBox(), \n        legend: props.legend, \n        data: data, \n        margins: props.margins, \n        colors: props.colors, \n        colorAccessor: props.colorAccessor, \n        width: props.width, \n        height: props.height, \n        title: props.title\n      }, \n        React.createElement(\"g\", {transform: trans, className: props.className}, \n          React.createElement(XAxis, {\n            xAxisClassName: \"rd3-areachart-xaxis\", \n            xScale: xScale, \n            xAxisTickValues: props.xAxisTickValues, \n            xAxisTickInterval: props.xAxisTickInterval, \n            xAxisTickCount: props.xAxisTickCount, \n            xAxisLabel: props.xAxisLabel, \n            xAxisLabelOffset: props.xAxisLabelOffset, \n            tickFormatting: props.xAxisFormatter, \n            xOrient: props.xOrient, \n            yOrient: props.yOrient, \n            margins: props.margins, \n            width: innerWidth, \n            height: innerHeight, \n            gridVertical: props.gridVertical, \n            gridVerticalStroke: props.gridVerticalStroke, \n            gridVerticalStrokeWidth: props.gridVerticalStrokeWidth, \n            gridVerticalStrokeDash: props.gridVerticalStrokeDash}\n          ), \n          React.createElement(YAxis, {\n            yAxisClassName: \"rd3-areachart-yaxis\", \n            yScale: yScale, \n            yAxisTickValues: props.yAxisTickValues, \n            yAxisTickInterval: props.yAxisTickInterval, \n            yAxisTickCount: props.yAxisTickCount, \n            yAxisLabel: props.yAxisLabel, \n            yAxisLabelOffset: props.yAxisLabelOffset, \n            tickFormatting: props.yAxisFormatter, \n            xOrient: props.xOrient, \n            yOrient: props.yOrient, \n            margins: props.margins, \n            width: innerWidth, \n            height: props.height, \n            gridHorizontal: props.gridHorizontal, \n            gridHorizontalStroke: props.gridHorizontalStroke, \n            gridHorizontalStrokeWidth: props.gridHorizontalStrokeWidth, \n            gridHorizontalStrokeDash: props.gridHorizontalStrokeDash}\n          ), \n          dataSeries\n        )\n      )\n    );\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/areachart/DataSeries.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\nvar AreaContainer = require('./AreaContainer');\n\nmodule.exports = React.createClass({\n\n  displayName: 'DataSeries',\n\n  propTypes: {\n    fill:              React.PropTypes.string,\n    interpolationType: React.PropTypes.string\n  },\n\n  getDefaultProps:function() {\n    return {\n      interpolationType: 'linear'\n    };\n  },\n\n  render:function() {\n\n    var props = this.props;\n\n    var area = d3.svg.area()\n      .x(function(d) { return props.xScale(props.xAccessor(d)); })\n      .y0(function(d) { return props.yScale(d.y0); })\n      .y1(function(d) { return props.yScale(d.y0 + props.yAccessor(d)); })\n      .interpolate(props.interpolationType);\n\n    var path = area(props.data);\n\n    return (\n      React.createElement(AreaContainer, {\n        fill: props.fill, \n        hoverAnimation: props.hoverAnimation, \n        path: path}\n      )\n    );\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/areachart/AreaContainer.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\nvar shade = require('../utils').shade;\nvar Area = require('./Area');\n\nmodule.exports = React.createClass({\n\n  displayName: 'AreaContainer',\n\n  propTypes: {\n    fill: React.PropTypes.string, \n  },\n\n  getDefaultProps:function() {\n    return {\n      fill: '#3182bd'\n    };\n  },\n\n  getInitialState:function() {\n    return { \n      fill: this.props.fill\n    };\n  },\n\n  render:function() {\n\n    var props = this.props;\n\n    // animation controller\n    var handleMouseOver, handleMouseLeave;\n    if(props.hoverAnimation) {\n      handleMouseOver = this._animateArea;\n      handleMouseLeave = this._restoreArea;\n    } else {\n      handleMouseOver = handleMouseLeave = null;\n    }\n\n    return (\n      React.createElement(Area, React.__spread({\n          handleMouseOver: handleMouseOver, \n          handleMouseLeave: handleMouseLeave}, \n          props, \n          {fill: this.state.fill})\n      )\n    );\n  },\n\n  _animateArea:function() {\n    this.setState({ \n      fill: shade(this.props.fill, 0.02)\n    });\n  },\n\n  _restoreArea:function() {\n    this.setState({ \n      fill: this.props.fill\n    });\n  },\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/areachart/Area.js":"'use strict';\n\nvar React = require('react');\n\nmodule.exports = React.createClass({\n\n  displayName: 'Area',\n\n  propTypes: {\n    path: React.PropTypes.string,\n    fill: React.PropTypes.string\n  },\n\n  getDefaultProps:function() {\n    return {\n      fill: '#3182bd'\n    };\n  },\n\n  render:function() {\n\n    return (\n      React.createElement(\"path\", {\n        className: \"rd3-areachart-area\", \n        d: this.props.path, \n        fill: this.props.fill, \n        onMouseOver: this.props.handleMouseOver, \n        onMouseLeave: this.props.handleMouseLeave}\n      )\n    );\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/treemap/index.js":"\nexports.Treemap = require('./Treemap');\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/treemap/Treemap.js":"'use strict';\n\nvar d3 = require('d3');\nvar React = require('react');\nvar Chart = require('../common').Chart;\nvar DataSeries = require('./DataSeries');\n\nmodule.exports = React.createClass({\n\n  displayName: 'Treemap',\n\n  propTypes: {\n    data:           React.PropTypes.array,\n    margins:        React.PropTypes.object,\n    width:          React.PropTypes.number,\n    height:         React.PropTypes.number,\n    title:          React.PropTypes.string,\n    textColor:      React.PropTypes.string,\n    fontSize:       React.PropTypes.oneOfType([\n                      React.PropTypes.string,\n                      React.PropTypes.number\n                    ]),\n    colors:         React.PropTypes.func,\n    colorAccessor:  React.PropTypes.func,\n    hoverAnimation: React.PropTypes.bool\n  },\n\n  getDefaultProps:function() {\n    return {\n      hoverAnimation: true,\n      data:           [],\n      width:          400,\n      heigth:         200,\n      title:          '',\n      textColor:      '#f7f7f7',\n      fontSize:       '0.85em',\n      colors:         d3.scale.category20c(),\n      colorAccessor:  function(d, idx)  {return idx;},\n    };\n  },\n\n  render:function() {\n\n    var props = this.props;\n\n    return (\n      React.createElement(Chart, {\n        title: props.title, \n        width: props.width, \n        height: props.height\n      }, \n        React.createElement(\"g\", {className: \"rd3-treemap\"}, \n          React.createElement(DataSeries, {\n            data: props.data, \n            width: props.width, \n            height: props.height, \n            colors: props.colors, \n            colorAccessor: props.colorAccessor, \n            textColor: props.textColor, \n            fontSize: props.fontSize, \n            hoverAnimation: props.hoverAnimation}\n          )\n        )\n      )\n    );\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/treemap/DataSeries.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\nvar CellContainer = require('./CellContainer');\n\n\nmodule.exports = React.createClass({\n\n  displayName: 'DataSeries',\n\n  propTypes: {\n    data:          React.PropTypes.array,\n    colors:        React.PropTypes.func,\n    colorAccessor: React.PropTypes.func,\n    width:         React.PropTypes.number,\n    height:        React.PropTypes.number\n  },\n\n  getDefaultProps:function() {\n    return {\n      data:          [],\n      colors:        d3.scale.category20c(),\n      colorAccessor: function(d, idx)  {return idx;}\n    };\n  },\n\n  render:function() {\n\n    var props = this.props;\n\n    var treemap = d3.layout.treemap()\n                    // make sure calculation loop through all objects inside array\n                    .children( function(d)  {return d;})\n                    .size([props.width, props.height])\n                    .sticky(true)\n                    .value( function(d)  { return d.value; });\n\n    var tree = treemap(props.data);\n\n    var cells = tree.map( function(node, idx)  {\n      return (\n        React.createElement(CellContainer, {\n          key: idx, \n          x: node.x, \n          y: node.y, \n          width: node.dx, \n          height: node.dy, \n          fill: props.colors(props.colorAccessor(node, idx)), \n          label: node.label, \n          fontSize: props.fontSize, \n          textColor: props.textColor, \n          hoverAnimation: props.hoverAnimation}\n        )\n      );\n    }, this);\n\n    return (\n      React.createElement(\"g\", {transform: props.transform, className: \"treemap\"}, \n        cells\n      )\n    );\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/treemap/CellContainer.js":"'use strict';\n\nvar React = require('react');\nvar shade = require('../utils').shade;\nvar Cell = require('./Cell');\n\n\nmodule.exports = React.createClass({\n\n  displayName: 'CellContainer',\n\n  propTypes: {\n    fill: React.PropTypes.string,\n  },\n\n  getInitialState:function() {\n    return {\n      // fill is named as fill instead of initialFill to avoid\n      // confusion when passing down props from top parent\n      fill: this.props.fill\n    };\n  },\n\n\n  render:function() {\n\n    var props = this.props;\n\n    return (\n      React.createElement(Cell, React.__spread({},  \n        props, \n        {fill: this.state.fill, \n        handleMouseOver: props.hoverAnimation ? this._animateCell : null, \n        handleMouseLeave: props.hoverAnimation ? this._restoreCell : null})\n      )\n    );\n  },\n\n  _animateCell:function() {\n    this.setState({\n      fill: shade(this.props.fill, 0.05)\n    });\n  },\n\n  _restoreCell:function() {\n    this.setState({\n      fill: this.props.fill\n    });\n  }\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/treemap/Cell.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\n\nmodule.exports = React.createClass({\n\n  displayName: 'Cell',\n\n  propTypes: {\n    fill: React.PropTypes.string,\n    width: React.PropTypes.number,\n    height: React.PropTypes.number,\n    label: React.PropTypes.string\n  },\n\n  render:function() {\n\n    var props = this.props;\n    \n    var textStyle = {\n      'textAnchor': 'middle',\n      'fill': props.textColor,\n      'fontSize': props.fontSize\n    };\n\n    var t = (\"translate(\" + props.x + \", \" + props.y + \"  )\");\n\n    return (\n      React.createElement(\"g\", {transform: t}, \n        React.createElement(\"rect\", {\n          className: \"rd3-treemap-cell\", \n          width: props.width, \n          height: props.height, \n          fill: props.fill, \n          onMouseOver: props.handleMouseOver, \n          onMouseLeave: props.handleMouseLeave}\n        ), \n        React.createElement(\"text\", {\n          x: props.width / 2, \n          y: props.height / 2, \n          dy: \".35em\", \n          style: textStyle, \n          className: \"rd3-treemap-cell-text\"\n        }, \n          props.label\n        )\n      )\n    );\n  }\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/scatterchart/index.js":"\nexports.ScatterChart = require('./ScatterChart');\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/scatterchart/ScatterChart.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\nvar $__0=      require('../common'),Chart=$__0.Chart,XAxis=$__0.XAxis,YAxis=$__0.YAxis;\nvar DataSeries = require('./DataSeries');\nvar utils = require('../utils');\nvar $__1=     require('../mixins'),CartesianChartPropsMixin=$__1.CartesianChartPropsMixin,ViewBoxMixin=$__1.ViewBoxMixin;\n\nmodule.exports = React.createClass({\n\n  mixins: [ CartesianChartPropsMixin, ViewBoxMixin ],\n\n  displayName: 'ScatterChart',\n\n  propTypes: {\n    circleRadius:     React.PropTypes.number,\n    className:        React.PropTypes.string,\n    hoverAnimation:   React.PropTypes.bool,\n    margins:          React.PropTypes.object,\n    xAxisClassName:   React.PropTypes.string,\n    xAxisStrokeWidth: React.PropTypes.number,\n    yAxisClassName:   React.PropTypes.string,\n    yAxisStrokeWidth: React.PropTypes.number\n },\n\n  getDefaultProps:function() {\n    return {\n      circleRadius:     3,\n      className:        'rd3-scatterchart',\n      hoverAnimation:   true,\n      margins:          {top: 10, right: 20, bottom: 50, left: 45},\n      xAxisClassName:   'rd3-scatterchart-xaxis',\n      xAxisStrokeWidth: 1,\n      yAxisClassName:   'rd3-scatterchart-yaxis',\n      yAxisStrokeWidth: 1\n    };\n  },\n\n  _calculateScales: utils.calculateScales,\n\n  render:function() {\n\n    var props = this.props;\n    var data  = props.data;\n    var margins = props.margins;\n\n    if (!data || data.length < 1) {\n      return null;\n    }\n\n    // Calculate inner chart dimensions\n    var innerWidth  = this.getOuterDimensions().width - margins.left - margins.right;\n    var innerHeight = this.getOuterDimensions().height - margins.top - margins.bottom;\n\n    // Returns an object of flattened allValues, xValues, and yValues\n    var flattenedData = utils.flattenData(data, props.xAccessor, props.yAccessor);\n\n    var allValues = flattenedData.allValues,\n        xValues   = flattenedData.xValues,\n        yValues   = flattenedData.yValues;\n\n    var scales  = this._calculateScales(innerWidth, innerHeight, xValues, yValues);\n    var xScale  = scales.xScale;\n    var yScale  = scales.yScale;\n\n    var x = props.yAxisOffset < 0 ? (margins.left + Math.abs(props.yAxisOffset)) : margins.left;\n    var transform = (\"translate(\" + x + \", \" + margins.top + \")\");\n\n    return (\n      React.createElement(Chart, {\n        colors: props.colors, \n        colorAccessor: props.colorAccessor, \n        data: data, \n        height: props.height, \n        legend: props.legend, \n        margins: margins, \n        title: props.title, \n        viewBox: this.getViewBox(), \n        width: props.width\n      }, \n        React.createElement(\"g\", {\n          className: props.className, \n          transform: transform\n        }, \n          React.createElement(XAxis, {\n            data: data, \n            height: innerHeight, \n            margins: margins, \n            stroke: props.axesColor, \n            strokeWidth: props.xAxisStrokeWidth.toString(), \n            tickFormatting: props.xAxisFormatter, \n            width: innerWidth, \n            xAxisClassName: props.xAxisClassName, \n            xAxisLabel: props.xAxisLabel, \n            xAxisLabelOffset: props.xAxisLabelOffset, \n            xAxisOffset: props.xAxisOffset, \n            xAxisTickInterval: props.xAxisTickInterval, \n            xAxisTickValues: props.xAxisTickValues, \n            xOrient: props.xOrient, \n            yOrient: props.yOrient, \n            xScale: xScale, \n            gridVertical: props.gridVertical, \n            gridVerticalStroke: props.gridVerticalStroke, \n            gridVerticalStrokeWidth: props.gridVerticalStrokeWidth, \n            gridVerticalStrokeDash: props.gridVerticalStrokeDash}\n          ), \n          React.createElement(YAxis, {\n            data: data, \n            width: innerWidth, \n            height: innerHeight, \n            margins: margins, \n            stroke: props.axesColor, \n            strokeWidth: props.yAxisStrokeWidth.toString(), \n            tickFormatting: props.yAxisFormatter, \n            yAxisClassName: props.yAxisClassName, \n            yAxisLabel: props.yAxisLabel, \n            yAxisLabelOffset: props.yAxisLabelOffset, \n            yAxisOffset: props.yAxisOffset, \n            yAxisTickValues: props.yAxisTickValues, \n            yAxisTickCount: props.yAxisTickCount, \n            yScale: yScale, \n            xOrient: props.xOrient, \n            yOrient: props.yOrient, \n            gridHorizontal: props.gridHorizontal, \n            gridHorizontalStroke: props.gridHorizontalStroke, \n            gridHorizontalStrokeWidth: props.gridHorizontalStrokeWidth, \n            gridHorizontalStrokeDash: props.gridHorizontalStrokeDash}\n          ), \n          React.createElement(DataSeries, {\n            circleRadius: props.circleRadius, \n            colors: props.colors, \n            colorAccessor: props.colorAccessor, \n            data: allValues, \n            height: innerHeight, \n            hoverAnimation: props.hoverAnimation, \n            width: innerWidth, \n            xAccessor: props.xAccessor, \n            xScale: xScale, \n            yAccessor: props.yAccessor, \n            yScale: yScale}\n            )\n        )\n      )\n    );\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/scatterchart/DataSeries.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\nvar VoronoiCircleContainer = require('./VoronoiCircleContainer');\n\nmodule.exports = React.createClass({\n\n  displayName: 'DataSeries',\n\n  propTypes: {\n    circleRadius:  React.PropTypes.number.isRequired,\n    className:     React.PropTypes.string,\n    colors:        React.PropTypes.func.isRequired,\n    colorAccessor: React.PropTypes.func.isRequired,\n    data:          React.PropTypes.array.isRequired,\n    height:        React.PropTypes.number.isRequired,\n    xAccessor:     React.PropTypes.func.isRequired,\n    xScale:        React.PropTypes.func.isRequired,\n    yAccessor:     React.PropTypes.func.isRequired,\n    yScale:        React.PropTypes.func.isRequired\n  },\n\n  getDefaultProps:function() {\n    return {\n      className: 'rd3-scatterchart-dataseries'\n    };\n  },\n\n  render: function() {\n    var props     = this.props;\n    var xScale    = props.xScale;\n    var yScale    = props.yScale;\n    var xAccessor = props.xAccessor;\n    var yAccessor = props.yAccessor;\n\n    var voronoi = d3.geom.voronoi()\n      .x(function(d){ return xScale(d.coord.x); })\n      .y(function(d){ return yScale(d.coord.y); })\n      .clipExtent([[0, 0], [ props.width , props.height]]);\n\n    var regions = voronoi(props.data).map(function(vnode, idx) {\n      var point = vnode.point;\n      var coord = point.coord;\n\n      var x = xAccessor(coord);\n      var y = yAccessor(coord);\n\n      // The circle coordinates\n      var cx, cy;\n\n      if (Object.prototype.toString.call(x) === '[object Date]') {\n        cx = xScale(x.getTime());\n      } else {\n        cx = xScale(x);\n      }\n\n      if (Object.prototype.toString.call(y) === '[object Date]') {\n        cy = yScale(y.getTime());\n      } else {\n        cy = yScale(y);\n      }\n\n      return (\n        React.createElement(VoronoiCircleContainer, {\n          key: idx, \n          circleFill: props.colors(props.colorAccessor(point.d, point.seriesIndex)), \n          circleRadius: props.circleRadius, \n          cx: cx, \n          cy: cy, \n          vnode: vnode}\n        )\n      );\n    });\n\n    return (\n      React.createElement(\"g\", {\n        className: props.className\n      }, \n        regions\n      )\n    );\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/scatterchart/VoronoiCircleContainer.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\nvar shade = require('../utils').shade;\nvar VoronoiCircle = require('./VoronoiCircle');\n\nmodule.exports = React.createClass({\n\n  displayName: 'VornoiCircleContainer',\n\n  propTypes: {\n    circleFill:             React.PropTypes.string,\n    circleRadius:           React.PropTypes.number,\n    circleRadiusMultiplier: React.PropTypes.number,\n    className:              React.PropTypes.string,\n    hoverAnimation:         React.PropTypes.bool,\n    shadeMultiplier:        React.PropTypes.number,\n    vnode:                  React.PropTypes.array.isRequired\n  },\n\n  getDefaultProps:function() {\n    return {\n      circleFill:             '#1f77b4',\n      circleRadius:           3,\n      circleRadiusMultiplier: 1.25,\n      className:              'rd3-scatterchart-voronoi-circle-container',\n      hoverAnimation:         true,\n      shadeMultiplier:        0.2\n    };\n  },\n\n  getInitialState:function() {\n    return {\n      circleFill:   this.props.circleFill,\n      circleRadius: this.props.circleRadius\n    };\n  },\n\n  componentWillReceiveProps:function(nextProps) {\n    this.setState({\n      circleFill:   nextProps.circleFill,\n      circleRadius: nextProps.circleRadius\n    });\n  },\n\n  render:function() {\n\n    var props = this.props;\n    var state = this.state;\n\n    return (\n      React.createElement(\"g\", {\n        className: props.className\n      }, \n        React.createElement(VoronoiCircle, {\n          circleFill: state.circleFill, \n          circleRadius: state.circleRadius, \n          cx: props.cx, \n          cy: props.cy, \n          handleMouseLeave: this._restoreCircle, \n          handleMouseOver: this._animateCircle, \n          voronoiPath: this._drawPath(props.vnode)}\n        )\n      )\n    );\n  },\n\n  _animateCircle:function() {\n    var props = this.props;\n\n    if(props.hoverAnimation) {\n      this.setState({\n        circleFill:   shade(props.circleFill, props.shadeMultiplier),\n        circleRadius: props.circleRadius * props.circleRadiusMultiplier\n      });\n    }\n  },\n\n  _restoreCircle:function() {\n    var props = this.props;\n\n    if(props.hoverAnimation) {\n      this.setState({\n        circleFill:   props.circleFill,\n        circleRadius: props.circleRadius\n      });\n    }\n  },\n\n  _drawPath: function(d) {\n    if(typeof d === 'undefined') {\n      return 'M Z';\n    }\n\n    return 'M' + d.join(',') + 'Z';\n  },\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/scatterchart/VoronoiCircle.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nmodule.exports = React.createClass({\n\n  displayName: 'VoronoiCircle',\n\n  propTypes: {\n    circleFill:       React.PropTypes.string.isRequired,\n    circleRadius:     React.PropTypes.number.isRequired,\n    className:        React.PropTypes.string,\n    cx:               React.PropTypes.number.isRequired,\n    cy:               React.PropTypes.number.isRequired,\n    handleMouseLeave: React.PropTypes.func.isRequired,\n    handleMouseOver:  React.PropTypes.func.isRequired,\n    pathFill:         React.PropTypes.string,\n    voronoiPath:      React.PropTypes.string.isRequired\n  },\n\n  getDefaultProps:function() {\n    return {\n      className:    'rd3-scatterchart-voronoi-circle',\n      pathFill:     'transparent'\n    };\n  },\n\n  render:function() {\n    var props = this.props;\n\n    return (\n      React.createElement(\"g\", null, \n        React.createElement(\"path\", {\n          d: props.voronoiPath, \n          fill: props.pathFill, \n          onMouseLeave: props.handleMouseLeave, \n          onMouseOver: props.handleMouseOver}\n        ), \n        React.createElement(\"circle\", {\n          cx: props.cx, \n          cy: props.cy, \n          className: props.className, \n          fill: props.circleFill, \n          onMouseLeave: props.handleMouseLeave, \n          onMouseOver: props.handleMouseOver, \n          r: props.circleRadius}\n        )\n      )\n    );\n  },\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/candlestick/index.js":"\nexports.CandlestickChart = require('./CandlestickChart');\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/candlestick/CandlestickChart.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\nvar utils = require('../utils');\nvar DataSeries = require('./DataSeries');\nvar $__0=      require('../common'),Chart=$__0.Chart,XAxis=$__0.XAxis,YAxis=$__0.YAxis;\n\nmodule.exports = React.createClass({\n\n  displayName: 'CandleStickChart',\n\n  propTypes: {\n    data:              React.PropTypes.oneOfType([\n                         React.PropTypes.array,\n                         React.PropTypes.object\n                       ]),\n    fillUp:            React.PropTypes.func,\n    fillUpAccessor:    React.PropTypes.func,\n    fillDown:          React.PropTypes.func,\n    fillDownAccessor:  React.PropTypes.func,\n    height:            React.PropTypes.number,\n    hoverAnimation:    React.PropTypes.bool,\n    title:             React.PropTypes.string,\n    xAccessor:         React.PropTypes.func,\n    xAxisFormatter:    React.PropTypes.func,\n    xAxisTickInterval: React.PropTypes.object,\n    xAxisTickValues:   React.PropTypes.array,\n    yAccessor:         React.PropTypes.func,\n    yAxisFormatter:    React.PropTypes.func,\n    yAxisTickCount:    React.PropTypes.number,\n    yAxisTickValues:   React.PropTypes.array,\n    width:             React.PropTypes.number,\n  },\n\n  getDefaultProps:function() {\n    return {\n      className:        'rd3-candlestick',\n      xAxisClassName:   'rd3-candlestick-xaxis',\n      yAxisClassName:   'rd3-candlestick-yaxis',\n      data:             [],\n      fillUp:           function(value)  {return '#ffffff';},\n      fillUpAccessor:   function(d, idx)  {return idx;},\n      fillDown:         d3.scale.category20c(),\n      fillDownAccessor: function(d, idx)  {return idx;},\n      height:           200,\n      hoverAnimation:   true,\n      margins:          {top: 10, right: 20, bottom: 30, left: 45},\n      legendOffset:     120,\n      title:            '',\n      xAccessor:        function(d)  {return d.x;},\n      yAccessor:        function(d)  {return { open: d.open, high: d.high, low: d.low, close: d.close };},\n      width:            400,\n    };\n  },\n\n  render:function() {\n\n    var props = this.props;\n\n    // Calculate inner chart dimensions\n    var innerWidth, innerHeight;\n    innerWidth = props.width - props.margins.left - props.margins.right;\n    innerHeight = props.height - props.margins.top - props.margins.bottom;\n\n    if (!Array.isArray(props.data)) {\n      props.data = [props.data];\n    }\n    var flattenedData = utils.flattenData(props.data, props.xAccessor, props.yAccessor);\n\n    var allValues = flattenedData.allValues,\n        xValues = flattenedData.xValues,\n        yValues = flattenedData.yValues;\n    var scales = utils.calculateScales(innerWidth, innerHeight, xValues, yValues);\n\n    var trans = (\"translate(\" + ( props.yAxisOffset < 0 ? props.margins.left + Math.abs(props.yAxisOffset) : props.margins.left) + \",\" +  props.margins.top + \")\");\n\n    var dataSeries = props.data.map( function(series, idx)  {\n      return (\n          React.createElement(DataSeries, {\n            key: idx, \n            seriesName: series.name, \n            index: idx, \n            xScale: scales.xScale, \n            yScale: scales.yScale, \n            data: series.values, \n            fillUp: props.fillUp(props.fillUpAccessor(series, idx)), \n            fillDown: props.fillDown(props.fillDownAccessor(series, idx)), \n            xAccessor: props.xAccessor, \n            yAccessor: props.yAccessor, \n            hoverAnimation: props.hoverAnimation}\n          )\n        );\n      });\n\n    return (\n      React.createElement(Chart, {\n        viewBox: props.viewBox, \n        width: props.width, \n        height: props.height, \n        margins: props.margins, \n        title: props.title\n      }, \n        React.createElement(\"g\", {transform: trans, className: props.className}, \n          React.createElement(XAxis, {\n            xAxisClassName: props.xAxisClassName, \n            xScale: scales.xScale, \n            xAxisTickValues: props.xAxisTickValues, \n            xAxisTickInterval: props.xAxisTickInterval, \n            xAxisOffset: props.xAxisOffset, \n            tickFormatting: props.xAxisFormatter, \n            xAxisLabel: props.xAxisLabel, \n            xAxisLabelOffset: props.xAxisLabelOffset, \n            xOrient: props.xOrient, \n            yOrient: props.yOrient, \n            margins: props.margins, \n            width: innerWidth, \n            height: innerHeight, \n            gridVertical: props.gridVertical, \n            gridVerticalStroke: props.gridVerticalStroke, \n            gridVerticalStrokeWidth: props.gridVerticalStrokeWidth, \n            gridVerticalStrokeDash: props.gridVerticalStrokeDash}\n          ), \n          React.createElement(YAxis, {\n            yAxisClassName: props.yAxisClassName, \n            yScale: scales.yScale, \n            yAxisTickValues: props.yAxisTickValues, \n            yAxisOffset: props.yAxisOffset, \n            yAxisTickCount: props.yAxisTickCount, \n            tickFormatting: props.yAxisFormatter, \n            yAxisLabel: props.yAxisLabel, \n            yAxisLabelOffset: props.yAxisLabelOffset, \n            xOrient: props.xOrient, \n            yOrient: props.yOrient, \n            margins: props.margins, \n            width: innerWidth, \n            height: props.height, \n            gridHorizontal: props.gridHorizontal, \n            gridHorizontalStroke: props.gridHorizontalStroke, \n            gridHorizontalStrokeWidth: props.gridHorizontalStrokeWidth, \n            gridHorizontalStrokeDash: props.gridHorizontalStrokeDash}\n          ), \n          dataSeries\n        )\n      )\n    );\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/candlestick/DataSeries.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\nvar utils = require('../utils');\nvar CandlestickContainer = require('./CandlestickContainer');\n\n\nmodule.exports = React.createClass({\n\n  displayName: 'DataSeries',\n\n  propTypes: {\n    fillUp:   React.PropTypes.string.isRequired,\n    fillDown: React.PropTypes.string.isRequired\n  },\n\n  render:function() {\n\n    var props = this.props;\n\n    var xRange = props.xScale.range(),\n        width = Math.abs(xRange[0] - xRange[1]),\n        candleWidth = (width / (props.data.length + 2)) * 0.5;\n\n    var dataSeriesArray = props.data.map( function(d, idx) {\n      // Candles\n      var ohlc = props.yAccessor(d),\n        candle_x = props.xScale(props.xAccessor(d)) - 0.5 * candleWidth,\n        candle_y = props.yScale(Math.max(ohlc.open, ohlc.close)),\n        candleHeight = Math.abs(props.yScale(ohlc.open) - props.yScale(ohlc.close)),\n        wick_y2 = props.yScale(ohlc.low),\n        ohlcClass = (ohlc.open <= ohlc.close) ? 'up' : 'down',\n        className = ( ohlcClass + \" rd3-candlestick-rect\"),\n        candleFill = (ohlc.open <= ohlc.close) ? props.fillUp : props.fillDown;\n\n      //Wicks\n      var wick_x1 = props.xScale(props.xAccessor(d)),\n        wick_y1 = props.yScale(ohlc.high),\n        wick_x2 = wick_x1;\n\n      return (\n        React.createElement(CandlestickContainer, {\n          key: idx, \n          candleFill: candleFill, \n          candleHeight: candleHeight, \n          candleWidth: candleWidth, \n          candle_x: candle_x, \n          candle_y: candle_y, \n          wick_x1: wick_x1, \n          wick_x2: wick_x2, \n          wick_y1: wick_y1, \n          wick_y2: wick_y2, \n          hoverAnimation: props.hoverAnimation}\n        )\n      );\n    }, this);\n\n    return (\n      React.createElement(\"g\", null, \n        dataSeriesArray\n      )\n    );\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/candlestick/CandlestickContainer.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\nvar utils = require('../utils');\nvar Candle = require('./Candle');\nvar Wick = require('./Wick');\n\nmodule.exports = React.createClass({\n\n  displayName: 'CandleStickContainer',\n\n  propTypes: {\n    candle_x:       React.PropTypes.number,\n    candle_y:       React.PropTypes.number,\n    className:      React.PropTypes.string,\n    candleFill:     React.PropTypes.string,\n    candleHeight:   React.PropTypes.number,\n    candleWidth:    React.PropTypes.number,\n    wick_x1:        React.PropTypes.number,\n    wick_x2:        React.PropTypes.number,\n    wick_y1:        React.PropTypes.number,\n    wick_y2:        React.PropTypes.number,\n  },\n\n  getDefaultProps:function() {\n    return {\n      className: 'rd3-candlestick-container'\n    };\n  },\n\n  getInitialState:function() {\n    // state for animation usage\n    return {\n      candleWidth: this.props.candleWidth,\n      candleFill: this.props.candleFill\n    };\n  },\n\n  render:function() {\n\n    var props = this.props;\n    var state = this.state;\n\n    // animation controller\n    var handleMouseOver, handleMouseLeave;\n    if(props.hoverAnimation) {\n      handleMouseOver = this._animateCandle;\n      handleMouseLeave = this._restoreCandle;\n    } else {\n      handleMouseOver = handleMouseLeave = null;\n    }\n\n    return (\n      React.createElement(\"g\", {className: props.className}, \n       React.createElement(Wick, {\n         wick_x1: props.wick_x1, \n         wick_x2: props.wick_x2, \n         wick_y1: props.wick_y1, \n         wick_y2: props.wick_y2}\n       ), \n       React.createElement(Candle, {\n         candleFill: state.candleFill, \n         candleWidth: state.candleWidth, \n         candle_x: props.candle_x - ((state.candleWidth - props.candleWidth) / 2), \n         candle_y: props.candle_y, \n         candleHeight: props.candleHeight, \n         handleMouseOver: handleMouseOver, \n         handleMouseLeave: handleMouseLeave}\n       )\n      )\n    );\n  },\n\n  _animateCandle:function() {\n    this.setState({ \n      candleWidth: this.props.candleWidth * 1.5,\n      candleFill: utils.shade(this.props.candleFill, -0.2)\n    });\n  },\n\n  _restoreCandle:function() {\n    this.setState({ \n      candleWidth: this.props.candleWidth,\n      candleFill: this.props.candleFill\n    });\n  },\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/candlestick/Candle.js":"'use strict';\n\nvar React = require('react');\n\nmodule.exports = React.createClass({\n\n  displayName: 'Candle',\n\n  propTypes: {\n    className:      React.PropTypes.string,\n    shapeRendering: React.PropTypes.string,\n    stroke:         React.PropTypes.string,\n    strokeWidth:    React.PropTypes.number,\n  },\n\n  getDefaultProps:function() {\n    return {\n      className:      'rd3-candlestick-candle',\n      shapeRendering: 'crispEdges',\n      stroke:         '#000',\n      strokeWidth:    1,\n    };\n  },\n\n  render:function() {\n    var props = this.props;\n\n    return (\n      React.createElement(\"rect\", {\n        className: props.className, \n        fill: props.candleFill, \n        x: props.candle_x, \n        y: props.candle_y, \n        stroke: props.stroke, \n        strokeWidth: props.strokeWidth, \n        style: { shapeRendering: props.shapeRendering}, \n        width: props.candleWidth, \n        height: props.candleHeight, \n        onMouseOver: props.handleMouseOver, \n        onMouseLeave: props.handleMouseLeave}\n      )\n    );\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/candlestick/Wick.js":"'use strict';\n\nvar React = require('react');\n\n\nmodule.exports = React.createClass({\n\n  displayName: 'Wick',\n\n  propTypes: {\n    className:      React.PropTypes.string,\n    shapeRendering: React.PropTypes.string,\n    stroke:         React.PropTypes.string,\n    strokeWidth:    React.PropTypes.number,\n  },\n\n  getDefaultProps:function() {\n    return {\n      className:      'rd3-candlestick-wick',\n      stroke:         '#000',\n      strokeWidth:    1,\n      shapeRendering: 'crispEdges',\n    };\n  },\n\n  render:function() {\n    var props = this.props;\n    return React.createElement(\"line\", {\n            stroke: props.stroke, \n            strokeWidth: props.strokeWidth, \n            style: { shapeRendering: props.shapeRendering}, \n            className: props.className, \n            x1: props.wick_x1, \n            y1: props.wick_y1, \n            x2: props.wick_x2, \n            y2: props.wick_y2}\n          );\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/common/Circle.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\n\nmodule.exports = React.createClass({displayName: \"exports\",\n\n  propTypes: {\n    cx: React.PropTypes.number,\n    cy: React.PropTypes.number,\n    r: React.PropTypes.number,\n    fill: React.PropTypes.string,\n    className: React.PropTypes.string\n  },\n\n  getDefaultProps: function() {\n    return {\n      fill: '#1f77b4'\n    };\n  },\n\n  getInitialState: function() {\n    // state for animation usage\n    return {\n      circleRadius: this.props.r,\n      circleColor: this.props.fill\n    };\n  },\n\n  componentDidMount:function() {\n    var props = this.props;\n    // The circle reference is observed when both it is set to\n    // active, and to inactive, so we have to check which one\n    var unobserve = props.voronoiRef.observe(function()  {\n      var circleStatus = props.voronoiRef.cursor().deref();\n      var seriesName = props.id.split('-')[0];\n      if (circleStatus === 'active') {\n        this._animateCircle(props.id);\n        var voronoiSeriesCursor = props.structure.cursor('voronoiSeries');\n        if (voronoiSeriesCursor) {\n          voronoiSeriesCursor.cursor(seriesName).update(function(){return 'active';});\n        }\n      } else if (circleStatus === 'inactive') {\n        this._restoreCircle(props.id);\n        props.structure.cursor('voronoiSeries').cursor(seriesName).update(function(){return 'inactive';});\n      }\n    }.bind(this));\n  },\n\n  componentWillUnmount: function() {\n    this.props.voronoiRef.destroy();\n  },\n\n  render: function() {\n    var props = this.props;\n    return (\n      React.createElement(\"circle\", {\n        cx: props.cx, \n        cy: props.cy, \n        r: this.state.circleRadius, \n        fill: this.state.circleColor, \n        id: props.id, \n        className: props.className}\n      )\n    );\n  },\n  \n  _animateCircle: function(id) {\n    this.setState({ \n      circleRadius: this.state.circleRadius * ( 5 / 4 )\n    });\n  },\n\n  _restoreCircle: function(id) {\n    this.setState({ \n      circleRadius: this.props.r\n    });\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-react-d3/node_modules/react-d3/common/VoronoiContainer.js":"'use strict';\n\nvar React = require('react');\nvar d3 = require('d3');\nvar shade = require('../utils').shade;\nvar VoronoiCircle = require('./VoronoiCircle');\n\nmodule.exports = React.createClass({\n\n  displayName: 'VoronoiContainer',\n\n  getDefaultProps:function() {\n    return {\n      circleRadius: 3,\n      circleFill: '#1f77b4',\n      hoverAnimation: true\n    };\n  },\n\n  getInitialState:function() {\n    return { \n      circleRadius: this.props.circleRadius,\n      circleFill: this.props.circleFill\n    };\n  },\n\n  render:function() {\n\n    var props = this.props;\n\n    // animation controller\n    var handleMouseOver, handleMouseLeave;\n    if(props.hoverAnimation) {\n      handleMouseOver = this._animateCircle;\n      handleMouseLeave = this._restoreCircle;\n    } else {\n      handleMouseOver = handleMouseLeave = null;\n    }\n\n    return (\n      React.createElement(\"g\", null, \n        React.createElement(VoronoiCircle, {\n            handleMouseOver: handleMouseOver, \n            handleMouseLeave: handleMouseLeave, \n            voronoiPath: this._drawPath(props.vnode), \n            cx: props.cx, \n            cy: props.cy, \n            circleRadius: this.state.circleRadius, \n            circleFill: this.state.circleFill}\n        )\n      )\n    );\n  },\n\n  _animateCircle:function() {\n    this.setState({ \n      circleRadius: this.props.circleRadius * ( 5 / 4 ),\n      circleFill: shade(this.props.circleFill, 0.2)\n    });\n  },\n\n  _restoreCircle:function() {\n    this.setState({ \n      circleRadius: this.props.circleRadius,\n      circleFill: this.props.circleFill\n    });\n  },\n\n  _drawPath: function(d) {\n    if(d === undefined) {\n      return; \n    }  \n    return 'M' + d.join(',') + 'Z';\n  },\n});\n"}